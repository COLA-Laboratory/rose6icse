cd /tmp/Cardumen_Defects4J_Chart_13;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/home/wp/tool/jdk1.8.0_71/bin/:$PATH";
export JAVA_HOME="/home/wp/tool/jdk1.8.0_71/bin/";
time java -Xmx1g -Xms1g -cp /home/wp/RepairThemAll/script/../libs/jtestex7.jar:/home/wp/RepairThemAll/script/../repair_tools/astor.jar fr.inria.main.evolution.AstorMain \
	-mode cardumen \
        -benchmark Defects4J \
	-location . \
	-id Chart-13 \
	-failing org.jfree.chart.block.junit.BorderArrangementTests \
	-jvm4testexecution /home/wp/tool/jdk1.7.0_80/bin/ \
	-jvm4evosuitetestexecution /home/wp/tool/jdk1.7.0_80/bin/ \
	-maxgen 1000000 \
	-maxtime 120 \
	-stopfirst true \
	-seed 0 \
	-scope local \
	-population 1 \
	-javacompliancelevel 4 \
	-srcjavafolder source/ \
	-srctestfolder tests/ \
	-binjavafolder build/ \
	-bintestfolder build-tests/ \
	-parameters x:x:maxCombinationVariableLimit:true:maxVarCombination:1000 \
	-dependencies /tmp/Cardumen_Defects4J_Chart_13/build/:/tmp/Cardumen_Defects4J_Chart_13/build-tests/:/tmp/Cardumen_Defects4J_Chart_13/lib/junit.jar:/tmp/Cardumen_Defects4J_Chart_13/lib/servlet.jar:/tmp/Cardumen_Defects4J_Chart_13/lib/itext-2.0.6.jar:/home/wp/RepairThemAll/script/../benchmarks/defects4j/framework/projects/lib/junit-4.11.jar;
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
Jul 21, 2019 12:14:53 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:53 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:53 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:53 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:53 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:53 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:53 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:53 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:53 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:53 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:53 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:53 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:53 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:53 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:53 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:53 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:53 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:53 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:53 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:53 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:53 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:53 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:53 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:53 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:53 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:53 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:53 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:53 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:53 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:53 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:53 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:54 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jul 21, 2019 12:14:55 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
[INFO ] fr.inria.astor.core.setup.ProjectConfiguration.getVersionJDK(ProjectConfiguration.java:282) - Version of the JVM used: 1.7.0_80
[INFO ] fr.inria.main.AbstractMain.processArguments(AbstractMain.java:388) - Java version of the JDK used to run tests: 1.7.0_80
[INFO ] fr.inria.main.AbstractMain.processArguments(AbstractMain.java:389) - The compliance of the JVM is:  7
[INFO ] fr.inria.main.AbstractMain.processArguments(AbstractMain.java:667) - command line arguments: [-mode  cardumen  -benchmark  Defects4J  -location  .  -id  Chart-13  -failing  org.jfree.chart.block.junit.BorderArrangementTests  -jvm4testexecution  /home/wp/tool/jdk1.7.0_80/bin/  -jvm4evosuitetestexecution  /home/wp/tool/jdk1.7.0_80/bin/  -maxgen  1000000  -maxtime  120  -stopfirst  true  -seed  0  -scope  local  -population  1  -javacompliancelevel  4  -srcjavafolder  source/  -srctestfolder  tests/  -binjavafolder  build/  -bintestfolder  build-tests/  -parameters  x:x:maxCombinationVariableLimit:true:maxVarCombination:1000  -dependencies  /tmp/Cardumen_Defects4J_Chart_13/build/:/tmp/Cardumen_Defects4J_Chart_13/build-tests/:/tmp/Cardumen_Defects4J_Chart_13/lib/junit.jar:/tmp/Cardumen_Defects4J_Chart_13/lib/servlet.jar:/tmp/Cardumen_Defects4J_Chart_13/lib/itext-2.0.6.jar:/home/wp/RepairThemAll/script/../benchmarks/defects4j/framework/projects/lib/junit-4.11.jar]
[INFO ] fr.inria.main.evolution.AstorMain.execute(AstorMain.java:287) - Running Astor on a JDK at /home/wp/tool/jdk1.8.0_71/jre
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:967) - Source folders: [/tmp/Cardumen_Defects4J_Chart_13/./source]
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:986) - Source Test folders: [/tmp/Cardumen_Defects4J_Chart_13/./tests]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:707) - 
---- Creating spoon model
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initModel(AstorCoreEngine.java:806) - Creating model,  Code location from working folder: /tmp/Cardumen_Defects4J_Chart_13/./source
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:66) - building model: /tmp/Cardumen_Defects4J_Chart_13/./source, compliance level: 4
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:79) - Classpath (Dependencies) for building SpoonModel: [/tmp/Cardumen_Defects4J_Chart_13/build/, /tmp/Cardumen_Defects4J_Chart_13/build-tests/, /tmp/Cardumen_Defects4J_Chart_13/lib/junit.jar, /tmp/Cardumen_Defects4J_Chart_13/lib/servlet.jar, /tmp/Cardumen_Defects4J_Chart_13/lib/itext-2.0.6.jar, /home/wp/RepairThemAll/script/../benchmarks/defects4j/framework/projects/lib/junit-4.11.jar]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:711) - 
---- Initial suspicious size: 306
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=497, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=502, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=503, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=506, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=510, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=511, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=512, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=513, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=515, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=516, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=517, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=518, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=519, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=523, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=524, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=525, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=526, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=527, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=531, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=532, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=533, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=534, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=535, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=536, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=540, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=541, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=542, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=543, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=544, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=548, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=549, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=550, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=551, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=552, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=553, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=557, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=558, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=559, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=560, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=89, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=90, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createModificationPoints(ProgramVariantFactory.java:215) -  Not ctClass for suspicious code Candidate [className=org.jfree.chart.block.junit.BorderArrangementTests, methodName=null, lineNumber=80, susp=0.0]
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:127) - Total suspicious from FL: 306,  329
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:136) - Total ModPoint created: 329
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createInitialPopulation(ProgramVariantFactory.java:82) - Creating program variant #1, [Variant id: 1, #gens: 329, #ops: 0, parent:-]
[INFO ] fr.inria.astor.core.solutionsearch.spaces.ingredients.scopes.ExpressionTypeIngredientSpace.defineSpace(ExpressionTypeIngredientSpace.java:121) - Ingredient search space info : number keys 104 , number values 578 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - ----------------------------
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:67) - ---Configuration properties:---Execution values
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:benchmark= Defects4J
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:lastJUnitVersion= ./examples/libs/junit-4.11.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:alternativecompliancelevel= 4
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoredTestCases= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:workingDirectory= /tmp/Cardumen_Defects4J_Chart_13/./output_astor
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:manipulatesuper= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:validation= process
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4testexecution= /home/wp/tool/jdk1.7.0_80/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:operatorspace= r-expression
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:disablelog= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:binjavafolder= build/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:synthesis_depth= 3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltartestpackagetoexclude= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfitnessinitialpopulation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuiteresultfolder= evosuite
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:flthreshold= 0.1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:regressionforfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:collectonlyusedmethod= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:preservelinenumbers= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax2= 140382
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ingredienttransformstrategy= name-probability-based
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax1= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probagenmutation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nomodificationconvergence= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:diff_type= relative
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:targetelementprocessor= expression
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srctestfolder= tests/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forceExecuteRegression= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:clusteringfilename= clustering.csv
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:failing= org.jfree.chart.block.junit.BorderArrangementTests
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logtestexecution= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_buggy_class= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:numberExecutions= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumbersolutions= 1000000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_affected_by_op= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:population= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:considerzerovaluesusp= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxCombinationVariableLimit= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:loglevel= INFO
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savesolution= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:javacompliancelevel= 4
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:x= x
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:uniqueoptogen= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltarpackagetonotinstrument= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectIdentifier= Chart-13
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:modificationpointnavigation= weight
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:stopfirst= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:multipointmodification= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:elementsToMutate= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jsonoutputname= astor_output
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoDSE= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bintestfolder= build-tests/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:testbystep= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:version-location= ./math-version/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:reintroduce= PARENTS:ORIGINAL
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:executorjar= ./lib/jtestex7.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxGeneration= 1000000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:max_synthesis_step= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxVarCombination= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtime= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitejar= ./lib/evosuite-master-1.0.4-SNAPSHOT.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvmversion= 1.7.0_80
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:commandTrunk= 50000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:faultlocalization= gzoltar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetmodel= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxsuspcandidates= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mode= cardumen
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:learningdir= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4evosuitetestexecution= /home/wp/tool/jdk1.7.0_80/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:filterfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mutationrate= 1 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pathToMVNRepository= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resourcesfolder= /src/main/resources:/src/test/resources:
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:timezone= America/Los_Angeles
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:runjava7code= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoRunOnBuggyClass= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:compiler= fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:limitbysuspicious= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logsattemps= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:dependenciespath= /tmp/Cardumen_Defects4J_Chart_13/build/:/tmp/Cardumen_Defects4J_Chart_13/build-tests/:/tmp/Cardumen_Defects4J_Chart_13/lib/junit.jar:/tmp/Cardumen_Defects4J_Chart_13/lib/servlet.jar:/tmp/Cardumen_Defects4J_Chart_13/lib/itext-2.0.6.jar:/home/wp/RepairThemAll/script/../benchmarks/defects4j/framework/projects/lib/junit-4.11.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logpatternlayout= [%-5p] %l - %m%n
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:packageToInstrument= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfaultlocalization= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:scope= local
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:transformingredient= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:fitnessfunction= fr.inria.astor.core.solutionsearch.population.TestCaseFitnessFunction
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumvariablesperingredient= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:parsesourcefromoriginal= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pvariantfoldername= variant-
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savespoonmodelondisk= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srcjavafolder= source/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:populationcontroller= fr.inria.astor.core.solutionsearch.population.TestCaseBasedFitnessPopulationController
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoreflakyinfl= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:cleantemplates= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:applyCrossover= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxmodificationpoints= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:duplicateingredientsinspace= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:metid= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:saveall= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:seed= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savecompletepatched= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetoperations= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:processoutputinfile= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:location= .
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probabilistictransformation= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:overridemaxtime= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ingredientstrategy= name-probability-based
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:outputjsonresult= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:allpoints= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bugId= 280
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitetimeout= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nrPlaceholders= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forcesubprocesskilling= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:71) - ----------------------------
[INFO ] fr.inria.astor.core.solutionsearch.EvolutionarySearchEngine.startEvolution(EvolutionarySearchEngine.java:40) - 
----Starting Solution Search
[ERROR] fr.inria.astor.approaches.cardumen.ExpressionReplaceOperator.applyChangesInModel(ExpressionReplaceOperator.java:51) - Replacement does not work for  modify r.getLowerBound() to r.getLowerBound()
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.processCreatedVariant(AstorCoreEngine.java:448) - -Found Solution, child variant #946
[ERROR] fr.inria.astor.core.solutionsearch.AstorCoreEngine.validateReversedOriginalVariant(AstorCoreEngine.java:356) - Error variant :946 the model was not the same from the original after this generation (see Diff in debug level)
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:173) - Time Repair Loop (s): 1191.323
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:175) - generationsexecuted: 473
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:244) - 
----SUMMARY_EXECUTION---
[INFO ] fr.inria.astor.core.ingredientbased.IngredientBasedEvolutionaryRepairApproachImpl.printFinalStatus(IngredientBasedEvolutionaryRepairApproachImpl.java:123) - Total mod points: 329
[INFO ] fr.inria.astor.core.solutionsearch.spaces.ingredients.scopes.ExpressionTypeIngredientSpace.toJSON(ExpressionTypeIngredientSpace.java:233) - Storing ing JSON at /tmp/Cardumen_Defects4J_Chart_13/./output_astor/AstorMain-Chart-13//src/ingredients.json
[INFO ] fr.inria.astor.core.stats.IngredientStats.toJSON(IngredientStats.java:253) - Storing ing JSON at /tmp/Cardumen_Defects4J_Chart_13/./output_astor/AstorMain-Chart-13//ingredientSpaceSize.json
[INFO ] fr.inria.astor.core.stats.IngredientStats.toJSON(IngredientStats.java:254) - ingredientSpaceSize:{"allAttempts":476,"space":[{"a":15,"v":23},{"a":8,"v":39},{"a":23,"v":5},{"a":16,"v":4},{"a":48,"v":2},{"a":7,"v":31},{"a":22,"v":8},{"a":32,"v":1},{"a":34,"v":1},{"a":9,"v":21},{"a":21,"v":9},{"a":6,"v":16},{"a":1,"v":27},{"a":29,"v":3},{"a":14,"v":7},{"a":24,"v":3},{"a":4,"v":70},{"a":36,"v":1},{"a":19,"v":4},{"a":26,"v":15},{"a":11,"v":19},{"a":18,"v":9},{"a":3,"v":31},{"a":12,"v":19},{"a":27,"v":2},{"a":17,"v":7},{"a":2,"v":25},{"a":13,"v":7},{"a":28,"v":2},{"a":20,"v":5},{"a":25,"v":3},{"a":10,"v":9},{"a":5,"v":48}]}
[INFO ] fr.inria.astor.core.stats.IngredientStats.toJSON(IngredientStats.java:253) - Storing ing JSON at /tmp/Cardumen_Defects4J_Chart_13/./output_astor/AstorMain-Chart-13//combinationsTemplatesingredientSpaceSize.json
[INFO ] fr.inria.astor.core.stats.IngredientStats.toJSON(IngredientStats.java:254) - combinationsTemplatesingredientSpaceSize:{"allAttempts":1221,"space":[{"a":4,"v":93},{"a":8,"v":33},{"a":11,"v":9},{"a":3,"v":59},{"a":7,"v":21},{"a":12,"v":18},{"a":2,"v":147},{"a":9,"v":9},{"a":6,"v":31},{"a":1,"v":627},{"a":10,"v":9},{"a":5,"v":25},{"a":0,"v":140}]}
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:191) - number of variants that pass the compile is 421

[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:192) - number of variants that fail the compile is 51

[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:194) - 
 --SOLUTIONS DESCRIPTION--

 ----
ProgramVariant 946
 
time(sec)= 1191
operation: ExpressionReplaceOperator
location= org.jfree.chart.block.BorderArrangement
line= 152
lineSuspiciousness= 0
lineSuspiciousness= 12
original statement= arrangeFF(container, g2, constraint)
buggy kind= CtInvocationImpl|CtAssignmentImpl
fixed statement= new org.jfree.chart.util.Size2D(constraint.getWidth(), constraint.getHeight())
Patch kind= CtConstructorCallImpl|CtAssignmentImpl
generation= 473
ingredientScope= -
ingredientParent= new org.jfree.chart.util.Size2D(_RectangleConstraint_0.getWidth(), _RectangleConstraint_0.getHeight())
validation=|true|0|3597|[]|
diffpatch=--- /tmp/Cardumen_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangementjava
+++ /tmp/Cardumen_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangementjava
@@ -63,7 +63,7 @@
 					contentSize = arrangeFN(container, g2, constraint.getWidth());
 				}else
 					if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
-						contentSize = arrangeFF(container, g2, constraint);
+						contentSize = new org.jfree.chart.util.Size2D(constraint.getWidth(), constraint.getHeight());
 					}else
 						if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
 							contentSize = arrangeFR(container, g2, constraint);


diffpatchoriginal=--- /tmp/Cardumen_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangementjava
+++ /tmp/Cardumen_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangementjava
@@ -149,27 +149,7 @@
 					contentSize = arrangeFN(container, g2, constraint.getWidth());
 				}else
 					if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
-						contentSize = arrangeFF(container, g2, constraint);
-					}else
-						if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
-							contentSize = arrangeFR(container, g2, constraint);
-						}
-			}else
-				if (w == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
-					if (h == (org.jfree.chart.block.LengthConstraintType.NONE)) {
-						throw new java.lang.RuntimeException("Not implemented.");
-					}else
-						if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
-							throw new java.lang.RuntimeException("Not implemented.");
-						}else
-							if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
-								contentSize = arrangeRR(container, constraint.getWidthRange(), 
-								constraint.getHeightRange(), g2);
-							}
-				}
-		return new org.jfree.chart.util.Size2D(container.calculateTotalWidth(contentSize.getWidth()), 
-		container.calculateTotalHeight(contentSize.getHeight()));
-	}
+						contentSize = 
 
 
 
@@ -179,66 +159,9 @@
 
 
 
-	protected org.jfree.chart.util.Size2D arrangeNN(org.jfree.chart.block.BlockContainer container, java.awt.Graphics2D g2) {
-		double[] w = new double[5];
-		double[] h = new double[5];
-		if ((this.topBlock) != null) {
-			org.jfree.chart.util.Size2D size = this.topBlock.arrange(g2, org.jfree.chart.block.RectangleConstraint.NONE);
-			w[0] = size.width;
-			h[0] = size.height;
-		}
-		if ((this.bottomBlock) != null) {
-			org.jfree.chart.util.Size2D size = this.bottomBlock.arrange(g2, 
-			org.jfree.chart.block.RectangleConstraint.NONE);
-			w[1] = size.width;
-			h[1] = size.height;
-		}
-		if ((this.leftBlock) != null) {
-			org.jfree.chart.util.Size2D size = this.leftBlock.arrange(g2, org.jfree.chart.block.RectangleConstraint.NONE);
-			w[2] = size.width;
-			h[2] = size.height;
-		}
-		if ((this.rightBlock) != null) {
-			org.jfree.chart.util.Size2D size = this.rightBlock.arrange(g2, org.jfree.chart.block.RectangleConstraint.NONE);
-			w[3] = size.width;
-			h[3] = size.height;
-		}
 
-		h[2] = java.lang.Math.max(h[2], h[3]);
-		h[3] = h[2];
 
-		if ((this.centerBlock) != null) {
-			org.jfree.chart.util.Size2D size = this.centerBlock.arrange(g2, 
-			org.jfree.chart.block.RectangleConstraint.NONE);
-			w[4] = size.width;
-			h[4] = size.height;
-		}
-		double width = java.lang.Math.max(w[0], java.lang.Math.max(w[1], (((w[2]) + (w[4])) + (w[3]))));
-		double centerHeight = java.lang.Math.max(h[2], java.lang.Math.max(h[3], h[4]));
-		double height = ((h[0]) + (h[1])) + centerHeight;
-		if ((this.topBlock) != null) {
-			this.topBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0, 0.0, width, 
-			h[0]));
-		}
-		if ((this.bottomBlock) != null) {
-			this.bottomBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0, 
-			(height - (h[1])), width, h[1]));
-		}
-		if ((this.leftBlock) != null) {
-			this.leftBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0, h[0], w[2], 
-			centerHeight));
-		}
-		if ((this.rightBlock) != null) {
-			this.rightBlock.setBounds(new java.awt.geom.Rectangle2D.Double((width - (w[3])), 
-			h[0], w[3], centerHeight));
-		}
 
-		if ((this.centerBlock) != null) {
-			this.centerBlock.setBounds(new java.awt.geom.Rectangle2D.Double(w[2], h[0], 
-			((width - (w[2])) - (w[3])), centerHeight));
-		}
-		return new org.jfree.chart.util.Size2D(width, height);
-	}
 
 
 
@@ -249,18 +172,6 @@
 
 
 
-	protected org.jfree.chart.util.Size2D arrangeFR(org.jfree.chart.block.BlockContainer container, java.awt.Graphics2D g2, 
-	org.jfree.chart.block.RectangleConstraint constraint) {
-		org.jfree.chart.util.Size2D size1 = arrangeFN(container, g2, constraint.getWidth());
-		if (constraint.getHeightRange().contains(size1.getHeight())) {
-			return size1;
-		}else 
-		{
-			double h = constraint.getHeightRange().constrain(size1.getHeight());
-			org.jfree.chart.block.RectangleConstraint c2 = constraint.toFixedHeight(h);
-			return arrange(container, g2, c2);
-		}
-	}
 
 
 
@@ -272,56 +183,8 @@
 
 
 
-	protected org.jfree.chart.util.Size2D arrangeFN(org.jfree.chart.block.BlockContainer container, java.awt.Graphics2D g2, 
-	double width) {
-		double[] w = new double[5];
-		double[] h = new double[5];
-		org.jfree.chart.block.RectangleConstraint c1 = new org.jfree.chart.block.RectangleConstraint(width, null, 
-		org.jfree.chart.block.LengthConstraintType.FIXED, 0.0, null, 
-		org.jfree.chart.block.LengthConstraintType.NONE);
-		if ((this.topBlock) != null) {
-			org.jfree.chart.util.Size2D size = this.topBlock.arrange(g2, c1);
-			w[0] = size.width;
-			h[0] = size.height;
-		}
-		if ((this.bottomBlock) != null) {
-			org.jfree.chart.util.Size2D size = this.bottomBlock.arrange(g2, c1);
-			w[1] = size.width;
-			h[1] = size.height;
-		}
-		org.jfree.chart.block.RectangleConstraint c2 = new org.jfree.chart.block.RectangleConstraint(0.0, 
-		new org.jfree.data.Range(0.0, width), org.jfree.chart.block.LengthConstraintType.RANGE, 
-		0.0, null, org.jfree.chart.block.LengthConstraintType.NONE);
-		if ((this.leftBlock) != null) {
-			org.jfree.chart.util.Size2D size = this.leftBlock.arrange(g2, c2);
-			w[2] = size.width;
-			h[2] = size.height;
-		}
-		if ((this.rightBlock) != null) {
-			double maxW = java.lang.Math.max((width - (w[2])), 0.0);
-			org.jfree.chart.block.RectangleConstraint c3 = new org.jfree.chart.block.RectangleConstraint(0.0, 
-			new org.jfree.data.Range(java.lang.Math.min(w[2], maxW), maxW), 
-			org.jfree.chart.block.LengthConstraintType.RANGE, 0.0, null, 
-			org.jfree.chart.block.LengthConstraintType.NONE);
-			org.jfree.chart.util.Size2D size = this.rightBlock.arrange(g2, c3);
-			w[3] = size.width;
-			h[3] = size.height;
-		}
 
-		h[2] = java.lang.Math.max(h[2], h[3]);
-		h[3] = h[2];
 
-		if ((this.centerBlock) != null) {
-			org.jfree.chart.block.RectangleConstraint c4 = new org.jfree.chart.block.RectangleConstraint(((width - (w[2])) - 
-			(w[3])), null, org.jfree.chart.block.LengthConstraintType.FIXED, 0.0, null, 
-			org.jfree.chart.block.LengthConstraintType.NONE);
-			org.jfree.chart.util.Size2D size = this.centerBlock.arrange(g2, c4);
-			w[4] = size.width;
-			h[4] = size.height;
-		}
-		double height = ((h[0]) + (h[1])) + (java.lang.Math.max(h[2], java.lang.Math.max(h[3], h[4])));
-		return arrange(container, g2, new org.jfree.chart.block.RectangleConstraint(width, height));
-	}
 
 
 
@@ -334,81 +197,11 @@
 
 
 
-	protected org.jfree.chart.util.Size2D arrangeRR(org.jfree.chart.block.BlockContainer container, 
-	org.jfree.data.Range widthRange, org.jfree.data.Range heightRange, 
-	java.awt.Graphics2D g2) {
-		double[] w = new double[5];
-		double[] h = new double[5];
-		if ((this.topBlock) != null) {
-			org.jfree.chart.block.RectangleConstraint c1 = new org.jfree.chart.block.RectangleConstraint(widthRange, 
-			heightRange);
-			org.jfree.chart.util.Size2D size = this.topBlock.arrange(g2, c1);
-			w[0] = size.width;
-			h[0] = size.height;
-		}
-		if ((this.bottomBlock) != null) {
-			org.jfree.data.Range heightRange2 = org.jfree.data.Range.shift(heightRange, (-(h[0])), false);
-			org.jfree.chart.block.RectangleConstraint c2 = new org.jfree.chart.block.RectangleConstraint(widthRange, 
-			heightRange2);
-			org.jfree.chart.util.Size2D size = this.bottomBlock.arrange(g2, c2);
-			w[1] = size.width;
-			h[1] = size.height;
-		}
-		org.jfree.data.Range heightRange3 = org.jfree.data.Range.shift(heightRange, (-((h[0]) + (h[1]))));
-		if ((this.leftBlock) != null) {
-			org.jfree.chart.block.RectangleConstraint c3 = new org.jfree.chart.block.RectangleConstraint(widthRange, 
-			heightRange3);
-			org.jfree.chart.util.Size2D size = this.leftBlock.arrange(g2, c3);
-			w[2] = size.width;
-			h[2] = size.height;
-		}
-		org.jfree.data.Range widthRange2 = org.jfree.data.Range.shift(widthRange, (-(w[2])), false);
-		if ((this.rightBlock) != null) {
-			org.jfree.chart.block.RectangleConstraint c4 = new org.jfree.chart.block.RectangleConstraint(widthRange2, 
-			heightRange3);
-			org.jfree.chart.util.Size2D size = this.rightBlock.arrange(g2, c4);
-			w[3] = size.width;
-			h[3] = size.height;
-		}
 
-		h[2] = java.lang.Math.max(h[2], h[3]);
-		h[3] = h[2];
-		org.jfree.data.Range widthRange3 = org.jfree.data.Range.shift(widthRange, (-((w[2]) + (w[3]))), false);
-		if ((this.centerBlock) != null) {
-			org.jfree.chart.block.RectangleConstraint c5 = new org.jfree.chart.block.RectangleConstraint(widthRange3, 
-			heightRange3);
 
 
 
-			org.jfree.chart.util.Size2D size = this.centerBlock.arrange(g2, c5);
-			w[4] = size.width;
-			h[4] = size.height;
-		}
-		double width = java.lang.Math.max(w[0], java.lang.Math.max(w[1], (((w[2]) + (w[4])) + (w[3]))));
-		double height = ((h[0]) + (h[1])) + (java.lang.Math.max(h[2], java.lang.Math.max(h[3], h[4])));
-		if ((this.topBlock) != null) {
-			this.topBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0, 0.0, width, 
-			h[0]));
-		}
-		if ((this.bottomBlock) != null) {
-			this.bottomBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0, 
-			(height - (h[1])), width, h[1]));
-		}
-		if ((this.leftBlock) != null) {
-			this.leftBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0, h[0], w[2], 
-			h[2]));
-		}
-		if ((this.rightBlock) != null) {
-			this.rightBlock.setBounds(new java.awt.geom.Rectangle2D.Double((width - (w[3])), 
-			h[0], w[3], h[3]));
-		}
 
-		if ((this.centerBlock) != null) {
-			this.centerBlock.setBounds(new java.awt.geom.Rectangle2D.Double(w[2], h[0], 
-			((width - (w[2])) - (w[3])), ((height - (h[0])) - (h[1]))));
-		}
-		return new org.jfree.chart.util.Size2D(width, height);
-	}
 
 
 
@@ -419,73 +212,280 @@
 
 
 
-	protected org.jfree.chart.util.Size2D arrangeFF(org.jfree.chart.block.BlockContainer container, java.awt.Graphics2D g2, 
-	org.jfree.chart.block.RectangleConstraint constraint) {
-		double[] w = new double[5];
-		double[] h = new double[5];
-		w[0] = constraint.getWidth();
-		if ((this.topBlock) != null) {
-			org.jfree.chart.block.RectangleConstraint c1 = new org.jfree.chart.block.RectangleConstraint(w[0], null, 
-			org.jfree.chart.block.LengthConstraintType.FIXED, 0.0, 
-			new org.jfree.data.Range(0.0, constraint.getHeight()), 
-			org.jfree.chart.block.LengthConstraintType.RANGE);
-			org.jfree.chart.util.Size2D size = this.topBlock.arrange(g2, c1);
-			h[0] = size.height;
-		}
-		w[1] = w[0];
-		if ((this.bottomBlock) != null) {
-			org.jfree.chart.block.RectangleConstraint c2 = new org.jfree.chart.block.RectangleConstraint(w[0], null, 
-			org.jfree.chart.block.LengthConstraintType.FIXED, 0.0, new org.jfree.data.Range(0.0, 
-			((constraint.getHeight()) - (h[0]))), org.jfree.chart.block.LengthConstraintType.RANGE);
-			org.jfree.chart.util.Size2D size = this.bottomBlock.arrange(g2, c2);
-			h[1] = size.height;
-		}
-		h[2] = ((constraint.getHeight()) - (h[1])) - (h[0]);
-		if ((this.leftBlock) != null) {
-			org.jfree.chart.block.RectangleConstraint c3 = new org.jfree.chart.block.RectangleConstraint(0.0, 
-			new org.jfree.data.Range(0.0, constraint.getWidth()), 
-			org.jfree.chart.block.LengthConstraintType.RANGE, h[2], null, 
-			org.jfree.chart.block.LengthConstraintType.FIXED);
-			org.jfree.chart.util.Size2D size = this.leftBlock.arrange(g2, c3);
-			w[2] = size.width;
-		}
-		h[3] = h[2];
-		if ((this.rightBlock) != null) {
-			org.jfree.chart.block.RectangleConstraint c4 = new org.jfree.chart.block.RectangleConstraint(0.0, 
-			new org.jfree.data.Range(0.0, ((constraint.getWidth()) - (w[2]))), 
-			org.jfree.chart.block.LengthConstraintType.RANGE, h[2], null, 
-			org.jfree.chart.block.LengthConstraintType.FIXED);
-			org.jfree.chart.util.Size2D size = this.rightBlock.arrange(g2, c4);
-			w[3] = size.width;
-		}
-		h[4] = h[2];
-		w[4] = ((constraint.getWidth()) - (w[3])) - (w[2]);
-		org.jfree.chart.block.RectangleConstraint c5 = new org.jfree.chart.block.RectangleConstraint(w[4], h[4]);
-		if ((this.centerBlock) != null) {
-			this.centerBlock.arrange(g2, c5);
-		}
 
-		if ((this.topBlock) != null) {
-			this.topBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0, 0.0, w[0], 
-			h[0]));
-		}
-		if ((this.bottomBlock) != null) {
-			this.bottomBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0, ((h[0]) + (h[2])), 
-			w[1], h[1]));
-		}
-		if ((this.leftBlock) != null) {
-			this.leftBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0, h[0], w[2], 
-			h[2]));
-		}
-		if ((this.rightBlock) != null) {
-			this.rightBlock.setBounds(new java.awt.geom.Rectangle2D.Double(((w[2]) + (w[4])), h[0], 
-			w[3], h[3]));
-		}
-		if ((this.centerBlock) != null) {
-			this.centerBlock.setBounds(new java.awt.geom.Rectangle2D.Double(w[2], h[0], w[4], 
-			h[4]));
-		}
-		return new org.jfree.chart.util.Size2D(constraint.getWidth(), constraint.getHeight());
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+						new org.jfree.chart.util.Size2D(constraint.getWidth(), constraint.getHeight());}else 						if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) { 							contentSize = arrangeFR(container, g2, constraint);}}else 				if (w == (org.jfree.chart.block.LengthConstraintType.RANGE)) { 					if (h == (org.jfree.chart.block.LengthConstraintType.NONE)) { 						throw new java.lang.RuntimeException("Not implemented.");}else 						if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) { 							throw new java.lang.RuntimeException("Not implemented.");}else 							if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) { 								contentSize = arrangeRR(container, constraint.getWidthRange(), constraint.getHeightRange(), g2);}} 		return new org.jfree.chart.util.Size2D(container.calculateTotalWidth(contentSize.getWidth()), container.calculateTotalHeight(contentSize.getHeight()));} 	protected org.jfree.chart.util.Size2D arrangeNN(org.jfree.chart.block.BlockContainer container, java.awt.Graphics2D g2) { 		double[] w = new double[5]; 		double[] h = new double[5]; 		if ((this.topBlock) != null) { 			org.jfree.chart.util.Size2D size = this.topBlock.arrange(g2, org.jfree.chart.block.RectangleConstraint.NONE); 			w[0] = size.width; 			h[0] = size.height;} 		if ((this.bottomBlock) != null) { 			org.jfree.chart.util.Size2D size = this.bottomBlock.arrange(g2, org.jfree.chart.block.RectangleConstraint.NONE); 			w[1] = size.width; 			h[1] = size.height;} 		if ((this.leftBlock) != null) { 			org.jfree.chart.util.Size2D size = this.leftBlock.arrange(g2, org.jfree.chart.block.RectangleConstraint.NONE); 			w[2] = size.width; 			h[2] = size.height;} 		if ((this.rightBlock) != null) { 			org.jfree.chart.util.Size2D size = this.rightBlock.arrange(g2, org.jfree.chart.block.RectangleConstraint.NONE); 			w[3] = size.width; 			h[3] = size.height;} 		h[2] = java.lang.Math.max(h[2], h[3]); 		h[3] = h[2]; 		if ((this.centerBlock) != null) { 			org.jfree.chart.util.Size2D size = this.centerBlock.arrange(g2, org.jfree.chart.block.RectangleConstraint.NONE); 			w[4] = size.width; 			h[4] = size.height;} 		double width = java.lang.Math.max(w[0], java.lang.Math.max(w[1], (((w[2]) + (w[4])) + (w[3])))); 		double centerHeight = java.lang.Math.max(h[2], java.lang.Math.max(h[3], h[4])); 		double height = ((h[0]) + (h[1])) + centerHeight; 		if ((this.topBlock) != null) { 			this.topBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0, 0.0, width, h[0]));} 		if ((this.bottomBlock) != null) { 			this.bottomBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0, (height - (h[1])), width, h[1]));} 		if ((this.leftBlock) != null) { 			this.leftBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0, h[0], w[2], centerHeight));} 		if ((this.rightBlock) != null) { 			this.rightBlock.setBounds(new java.awt.geom.Rectangle2D.Double((width - (w[3])), h[0], w[3], centerHeight));} 		if ((this.centerBlock) != null) { 			this.centerBlock.setBounds(new java.awt.geom.Rectangle2D.Double(w[2], h[0], ((width - (w[2])) - (w[3])), centerHeight));} 		return new org.jfree.chart.util.Size2D(width, height);} 	protected org.jfree.chart.util.Size2D arrangeFR(org.jfree.chart.block.BlockContainer container, java.awt.Graphics2D g2, org.jfree.chart.block.RectangleConstraint constraint) { 		org.jfree.chart.util.Size2D size1 = arrangeFN(container, g2, constraint.getWidth()); 		if (constraint.getHeightRange().contains(size1.getHeight())) { 			return size1;}else { 			double h = constraint.getHeightRange().constrain(size1.getHeight()); 			org.jfree.chart.block.RectangleConstraint c2 = constraint.toFixedHeight(h); 			return arrange(container, g2, c2);}} 	protected org.jfree.chart.util.Size2D arrangeFN(org.jfree.chart.block.BlockContainer container, java.awt.Graphics2D g2, double width) { 		double[] w = new double[5]; 		double[] h = new double[5]; 		org.jfree.chart.block.RectangleConstraint c1 = new org.jfree.chart.block.RectangleConstraint(width, null, org.jfree.chart.block.LengthConstraintType.FIXED, 0.0, null, org.jfree.chart.block.LengthConstraintType.NONE); 		if ((this.topBlock) != null) { 			org.jfree.chart.util.Size2D size = this.topBlock.arrange(g2, c1); 			w[0] = size.width; 			h[0] = size.height;} 		if ((this.bottomBlock) != null) { 			org.jfree.chart.util.Size2D size = this.bottomBlock.arrange(g2, c1); 			w[1] = size.width; 			h[1] = size.height;} 		org.jfree.chart.block.RectangleConstraint c2 = new org.jfree.chart.block.RectangleConstraint(0.0, new org.jfree.data.Range(0.0, width), org.jfree.chart.block.LengthConstraintType.RANGE, 0.0, null, org.jfree.chart.block.LengthConstraintType.NONE); 		if ((this.leftBlock) != null) { 			org.jfree.chart.util.Size2D size = this.leftBlock.arrange(g2, c2); 			w[2] = size.width; 			h[2] = size.height;} 		if ((this.rightBlock) != null) { 			double maxW = java.lang.Math.max((width - (w[2])), 0.0); 			org.jfree.chart.block.RectangleConstraint c3 = new org.jfree.chart.block.RectangleConstraint(0.0, new org.jfree.data.Range(java.lang.Math.min(w[2], maxW), maxW), org.jfree.chart.block.LengthConstraintType.RANGE, 0.0, null, org.jfree.chart.block.LengthConstraintType.NONE); 			org.jfree.chart.util.Size2D size = this.rightBlock.arrange(g2, c3); 			w[3] = size.width; 			h[3] = size.height;} 		h[2] = java.lang.Math.max(h[2], h[3]); 		h[3] = h[2]; 		if ((this.centerBlock) != null) { 			org.jfree.chart.block.RectangleConstraint c4 = new org.jfree.chart.block.RectangleConstraint(((width - (w[2])) - (w[3])), null, org.jfree.chart.block.LengthConstraintType.FIXED, 0.0, null, org.jfree.chart.block.LengthConstraintType.NONE); 			org.jfree.chart.util.Size2D size = this.centerBlock.arrange(g2, c4); 			w[4] = size.width; 			h[4] = size.height;} 		double height = ((h[0]) + (h[1])) + (java.lang.Math.max(h[2], java.lang.Math.max(h[3], h[4]))); 		return arrange(container, g2, new org.jfree.chart.block.RectangleConstraint(width, height));} 	protected org.jfree.chart.util.Size2D arrangeRR(org.jfree.chart.block.BlockContainer container, org.jfree.data.Range widthRange, org.jfree.data.Range heightRange, java.awt.Graphics2D g2) { 		double[] w = new double[5]; 		double[] h = new double[5]; 		if ((this.topBlock) != null) { 			org.jfree.chart.block.RectangleConstraint c1 = new org.jfree.chart.block.RectangleConstraint(widthRange, heightRange); 			org.jfree.chart.util.Size2D size = this.topBlock.arrange(g2, c1); 			w[0] = size.width; 			h[0] = size.height;} 		if ((this.bottomBlock) != null) { 			org.jfree.data.Range heightRange2 = org.jfree.data.Range.shift(heightRange, (-(h[0])), false); 			org.jfree.chart.block.RectangleConstraint c2 = new org.jfree.chart.block.RectangleConstraint(widthRange, heightRange2); 			org.jfree.chart.util.Size2D size = this.bottomBlock.arrange(g2, c2); 			w[1] = size.width; 			h[1] = size.height;} 		org.jfree.data.Range heightRange3 = org.jfree.data.Range.shift(heightRange, (-((h[0]) + (h[1])))); 		if ((this.leftBlock) != null) { 			org.jfree.chart.block.RectangleConstraint c3 = new org.jfree.chart.block.RectangleConstraint(widthRange, heightRange3); 			org.jfree.chart.util.Size2D size = this.leftBlock.arrange(g2, c3); 			w[2] = size.width; 			h[2] = size.height;} 		org.jfree.data.Range widthRange2 = org.jfree.data.Range.shift(widthRange, (-(w[2])), false); 		if ((this.rightBlock) != null) { 			org.jfree.chart.block.RectangleConstraint c4 = new org.jfree.chart.block.RectangleConstraint(widthRange2, heightRange3); 			org.jfree.chart.util.Size2D size = this.rightBlock.arrange(g2, c4); 			w[3] = size.width; 			h[3] = size.height;} 		h[2] = java.lang.Math.max(h[2], h[3]); 		h[3] = h[2]; 		org.jfree.data.Range widthRange3 = org.jfree.data.Range.shift(widthRange, (-((w[2]) + (w[3]))), false); 		if ((this.centerBlock) != null) { 			org.jfree.chart.block.RectangleConstraint c5 = new org.jfree.chart.block.RectangleConstraint(widthRange3, heightRange3); 			org.jfree.chart.util.Size2D size = this.centerBlock.arrange(g2, c5); 			w[4] = size.width; 			h[4] = size.height;} 		double width = java.lang.Math.max(w[0], java.lang.Math.max(w[1], (((w[2]) + (w[4])) + (w[3])))); 		double height = ((h[0]) + (h[1])) + (java.lang.Math.max(h[2], java.lang.Math.max(h[3], h[4]))); 		if ((this.topBlock) != null) { 			this.topBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0, 0.0, width, h[0]));} 		if ((this.bottomBlock) != null) { 			this.bottomBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0, (height - (h[1])), width, h[1]));} 		if ((this.leftBlock) != null) { 			this.leftBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0, h[0], w[2], h[2]));} 		if ((this.rightBlock) != null) { 			this.rightBlock.setBounds(new java.awt.geom.Rectangle2D.Double((width - (w[3])), h[0], w[3], h[3]));} 		if ((this.centerBlock) != null) { 			this.centerBlock.setBounds(new java.awt.geom.Rectangle2D.Double(w[2], h[0], ((width - (w[2])) - (w[3])), ((height - (h[0])) - (h[1]))));} 		return new org.jfree.chart.util.Size2D(width, height);} 	protected org.jfree.chart.util.Size2D arrangeFF(org.jfree.chart.block.BlockContainer container, java.awt.Graphics2D g2, org.jfree.chart.block.RectangleConstraint constraint) { 		double[] w = new double[5]; 		double[] h = new double[5]; 		w[0] = constraint.getWidth(); 		if ((this.topBlock) != null) { 			org.jfree.chart.block.RectangleConstraint c1 = new org.jfree.chart.block.RectangleConstraint(w[0], null, org.jfree.chart.block.LengthConstraintType.FIXED, 0.0, new org.jfree.data.Range(0.0, constraint.getHeight()), org.jfree.chart.block.LengthConstraintType.RANGE); 			org.jfree.chart.util.Size2D size = this.topBlock.arrange(g2, c1); 			h[0] = size.height;} 		w[1] = w[0]; 		if ((this.bottomBlock) != null) { 			org.jfree.chart.block.RectangleConstraint c2 = new org.jfree.chart.block.RectangleConstraint(w[0], null, org.jfree.chart.block.LengthConstraintType.FIXED, 0.0, new org.jfree.data.Range(0.0, ((constraint.getHeight()) - (h[0]))), org.jfree.chart.block.LengthConstraintType.RANGE); 			org.jfree.chart.util.Size2D size = this.bottomBlock.arrange(g2, c2); 			h[1] = size.height;} 		h[2] = ((constraint.getHeight()) - (h[1])) - (h[0]); 		if ((this.leftBlock) != null) { 			org.jfree.chart.block.RectangleConstraint c3 = new org.jfree.chart.block.RectangleConstraint(0.0, new org.jfree.data.Range(0.0, constraint.getWidth()), org.jfree.chart.block.LengthConstraintType.RANGE, h[2], null, org.jfree.chart.block.LengthConstraintType.FIXED); 			org.jfree.chart.util.Size2D size = this.leftBlock.arrange(g2, c3); 			w[2] = size.width;} 		h[3] = h[2]; 		if ((this.rightBlock) != null) { 			org.jfree.chart.block.RectangleConstraint c4 = new org.jfree.chart.block.RectangleConstraint(0.0, new org.jfree.data.Range(0.0, ((constraint.getWidth()) - (w[2]))), org.jfree.chart.block.LengthConstraintType.RANGE, h[2], null, org.jfree.chart.block.LengthConstraintType.FIXED); 			org.jfree.chart.util.Size2D size = this.rightBlock.arrange(g2, c4); 			w[3] = size.width;} 		h[4] = h[2]; 		w[4] = ((constraint.getWidth()) - (w[3])) - (w[2]); 		org.jfree.chart.block.RectangleConstraint c5 = new org.jfree.chart.block.RectangleConstraint(w[4], h[4]); 		if ((this.centerBlock) != null) { 			this.centerBlock.arrange(g2, c5);} 		if ((this.topBlock) != null) { 			this.topBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0, 0.0, w[0], h[0]));} 		if ((this.bottomBlock) != null) { 			this.bottomBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0, ((h[0]) + (h[2])), w[1], h[1]));} 		if ((this.leftBlock) != null) { 			this.leftBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0, h[0], w[2], h[2]));} 		if ((this.rightBlock) != null) { 			this.rightBlock.setBounds(new java.awt.geom.Rectangle2D.Double(((w[2]) + (w[4])), h[0], w[3], h[3]));} 		if ((this.centerBlock) != null) { 			this.centerBlock.setBounds(new java.awt.geom.Rectangle2D.Double(w[2], h[0], w[4], h[4]));} 		return new org.jfree.chart.util.Size2D(constraint.getWidth(), constraint.getHeight());
 	}
 
 



Astor Output:

General stats:
EXECUTION_IDENTIFIER=Chart-13
TOTAL_TIME=1191.323
NR_GENERATIONS=473
NR_RIGHT_COMPILATIONS=422
NR_FAILLING_COMPILATIONS=51
NR_ERRONEOUS_VARIANCES=null
NR_FAILING_VALIDATION_PROCESS=null
OUTPUT_STATUS=STOP_BY_PATCH_FOUND

Patch stats:

Patch 1
VARIANT_ID=946
TIME=1191
VALIDATION=|true|0|3597|[]|
GENERATION=473
FOLDER_SOLUTION_CODE=/tmp/Cardumen_Defects4J_Chart_13/./output_astor/AstorMain-Chart-13//src//variant-946
--Patch Hunk #1
OPERATOR=ExpressionReplaceOperator

LOCATION=org.jfree.chart.block.BorderArrangement

PATH=/tmp/Cardumen_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangement.java

MODIFIED_FILE_PATH=/tmp/Cardumen_Defects4J_Chart_13/./output_astor/AstorMain-Chart-13//src//variant-946/org/jfree/chart/block/BorderArrangement.java

LINE=152

SUSPICIOUNESS=0

MP_RANKING=12

ORIGINAL_CODE=arrangeFF(container, g2, constraint)

BUGGY_CODE_TYPE=CtInvocationImpl|CtAssignmentImpl

PATCH_HUNK_CODE=new org.jfree.chart.util.Size2D(constraint.getWidth(), constraint.getHeight())

PATCH_HUNK_TYPE=CtConstructorCallImpl|CtAssignmentImpl

INGREDIENT_SCOPE=-

INGREDIENT_PARENT=new org.jfree.chart.util.Size2D(_RectangleConstraint_0.getWidth(), _RectangleConstraint_0.getHeight())

PATCH_DIFF_ORIG=--- /tmp/Cardumen_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangementjava
+++ /tmp/Cardumen_Defects4J_Chart_13/source/org/jfree/chart/block/BorderArrangementjava
@@ -149,27 +149,7 @@
 					contentSize = arrangeFN(container, g2, constraint.getWidth());
 				}else
 					if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
-						contentSize = arrangeFF(container, g2, constraint);
-					}else
-						if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
-							contentSize = arrangeFR(container, g2, constraint);
-						}
-			}else
-				if (w == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
-					if (h == (org.jfree.chart.block.LengthConstraintType.NONE)) {
-						throw new java.lang.RuntimeException("Not implemented.");
-					}else
-						if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) {
-							throw new java.lang.RuntimeException("Not implemented.");
-						}else
-							if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) {
-								contentSize = arrangeRR(container, constraint.getWidthRange(), 
-								constraint.getHeightRange(), g2);
-							}
-				}
-		return new org.jfree.chart.util.Size2D(container.calculateTotalWidth(contentSize.getWidth()), 
-		container.calculateTotalHeight(contentSize.getHeight()));
-	}
+						contentSize = 
 
 
 
@@ -179,66 +159,9 @@
 
 
 
-	protected org.jfree.chart.util.Size2D arrangeNN(org.jfree.chart.block.BlockContainer container, java.awt.Graphics2D g2) {
-		double[] w = new double[5];
-		double[] h = new double[5];
-		if ((this.topBlock) != null) {
-			org.jfree.chart.util.Size2D size = this.topBlock.arrange(g2, org.jfree.chart.block.RectangleConstraint.NONE);
-			w[0] = size.width;
-			h[0] = size.height;
-		}
-		if ((this.bottomBlock) != null) {
-			org.jfree.chart.util.Size2D size = this.bottomBlock.arrange(g2, 
-			org.jfree.chart.block.RectangleConstraint.NONE);
-			w[1] = size.width;
-			h[1] = size.height;
-		}
-		if ((this.leftBlock) != null) {
-			org.jfree.chart.util.Size2D size = this.leftBlock.arrange(g2, org.jfree.chart.block.RectangleConstraint.NONE);
-			w[2] = size.width;
-			h[2] = size.height;
-		}
-		if ((this.rightBlock) != null) {
-			org.jfree.chart.util.Size2D size = this.rightBlock.arrange(g2, org.jfree.chart.block.RectangleConstraint.NONE);
-			w[3] = size.width;
-			h[3] = size.height;
-		}
 
-		h[2] = java.lang.Math.max(h[2], h[3]);
-		h[3] = h[2];
 
-		if ((this.centerBlock) != null) {
-			org.jfree.chart.util.Size2D size = this.centerBlock.arrange(g2, 
-			org.jfree.chart.block.RectangleConstraint.NONE);
-			w[4] = size.width;
-			h[4] = size.height;
-		}
-		double width = java.lang.Math.max(w[0], java.lang.Math.max(w[1], (((w[2]) + (w[4])) + (w[3]))));
-		double centerHeight = java.lang.Math.max(h[2], java.lang.Math.max(h[3], h[4]));
-		double height = ((h[0]) + (h[1])) + centerHeight;
-		if ((this.topBlock) != null) {
-			this.topBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0, 0.0, width, 
-			h[0]));
-		}
-		if ((this.bottomBlock) != null) {
-			this.bottomBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0, 
-			(height - (h[1])), width, h[1]));
-		}
-		if ((this.leftBlock) != null) {
-			this.leftBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0, h[0], w[2], 
-			centerHeight));
-		}
-		if ((this.rightBlock) != null) {
-			this.rightBlock.setBounds(new java.awt.geom.Rectangle2D.Double((width - (w[3])), 
-			h[0], w[3], centerHeight));
-		}
 
-		if ((this.centerBlock) != null) {
-			this.centerBlock.setBounds(new java.awt.geom.Rectangle2D.Double(w[2], h[0], 
-			((width - (w[2])) - (w[3])), centerHeight));
-		}
-		return new org.jfree.chart.util.Size2D(width, height);
-	}
 
 
 
@@ -249,18 +172,6 @@
 
 
 
-	protected org.jfree.chart.util.Size2D arrangeFR(org.jfree.chart.block.BlockContainer container, java.awt.Graphics2D g2, 
-	org.jfree.chart.block.RectangleConstraint constraint) {
-		org.jfree.chart.util.Size2D size1 = arrangeFN(container, g2, constraint.getWidth());
-		if (constraint.getHeightRange().contains(size1.getHeight())) {
-			return size1;
-		}else 
-		{
-			double h = constraint.getHeightRange().constrain(size1.getHeight());
-			org.jfree.chart.block.RectangleConstraint c2 = constraint.toFixedHeight(h);
-			return arrange(container, g2, c2);
-		}
-	}
 
 
 
@@ -272,56 +183,8 @@
 
 
 
-	protected org.jfree.chart.util.Size2D arrangeFN(org.jfree.chart.block.BlockContainer container, java.awt.Graphics2D g2, 
-	double width) {
-		double[] w = new double[5];
-		double[] h = new double[5];
-		org.jfree.chart.block.RectangleConstraint c1 = new org.jfree.chart.block.RectangleConstraint(width, null, 
-		org.jfree.chart.block.LengthConstraintType.FIXED, 0.0, null, 
-		org.jfree.chart.block.LengthConstraintType.NONE);
-		if ((this.topBlock) != null) {
-			org.jfree.chart.util.Size2D size = this.topBlock.arrange(g2, c1);
-			w[0] = size.width;
-			h[0] = size.height;
-		}
-		if ((this.bottomBlock) != null) {
-			org.jfree.chart.util.Size2D size = this.bottomBlock.arrange(g2, c1);
-			w[1] = size.width;
-			h[1] = size.height;
-		}
-		org.jfree.chart.block.RectangleConstraint c2 = new org.jfree.chart.block.RectangleConstraint(0.0, 
-		new org.jfree.data.Range(0.0, width), org.jfree.chart.block.LengthConstraintType.RANGE, 
-		0.0, null, org.jfree.chart.block.LengthConstraintType.NONE);
-		if ((this.leftBlock) != null) {
-			org.jfree.chart.util.Size2D size = this.leftBlock.arrange(g2, c2);
-			w[2] = size.width;
-			h[2] = size.height;
-		}
-		if ((this.rightBlock) != null) {
-			double maxW = java.lang.Math.max((width - (w[2])), 0.0);
-			org.jfree.chart.block.RectangleConstraint c3 = new org.jfree.chart.block.RectangleConstraint(0.0, 
-			new org.jfree.data.Range(java.lang.Math.min(w[2], maxW), maxW), 
-			org.jfree.chart.block.LengthConstraintType.RANGE, 0.0, null, 
-			org.jfree.chart.block.LengthConstraintType.NONE);
-			org.jfree.chart.util.Size2D size = this.rightBlock.arrange(g2, c3);
-			w[3] = size.width;
-			h[3] = size.height;
-		}
 
-		h[2] = java.lang.Math.max(h[2], h[3]);
-		h[3] = h[2];
 
-		if ((this.centerBlock) != null) {
-			org.jfree.chart.block.RectangleConstraint c4 = new org.jfree.chart.block.RectangleConstraint(((width - (w[2])) - 
-			(w[3])), null, org.jfree.chart.block.LengthConstraintType.FIXED, 0.0, null, 
-			org.jfree.chart.block.LengthConstraintType.NONE);
-			org.jfree.chart.util.Size2D size = this.centerBlock.arrange(g2, c4);
-			w[4] = size.width;
-			h[4] = size.height;
-		}
-		double height = ((h[0]) + (h[1])) + (java.lang.Math.max(h[2], java.lang.Math.max(h[3], h[4])));
-		return arrange(container, g2, new org.jfree.chart.block.RectangleConstraint(width, height));
-	}
 
 
 
@@ -334,81 +197,11 @@
 
 
 
-	protected org.jfree.chart.util.Size2D arrangeRR(org.jfree.chart.block.BlockContainer container, 
-	org.jfree.data.Range widthRange, org.jfree.data.Range heightRange, 
-	java.awt.Graphics2D g2) {
-		double[] w = new double[5];
-		double[] h = new double[5];
-		if ((this.topBlock) != null) {
-			org.jfree.chart.block.RectangleConstraint c1 = new org.jfree.chart.block.RectangleConstraint(widthRange, 
-			heightRange);
-			org.jfree.chart.util.Size2D size = this.topBlock.arrange(g2, c1);
-			w[0] = size.width;
-			h[0] = size.height;
-		}
-		if ((this.bottomBlock) != null) {
-			org.jfree.data.Range heightRange2 = org.jfree.data.Range.shift(heightRange, (-(h[0])), false);
-			org.jfree.chart.block.RectangleConstraint c2 = new org.jfree.chart.block.RectangleConstraint(widthRange, 
-			heightRange2);
-			org.jfree.chart.util.Size2D size = this.bottomBlock.arrange(g2, c2);
-			w[1] = size.width;
-			h[1] = size.height;
-		}
-		org.jfree.data.Range heightRange3 = org.jfree.data.Range.shift(heightRange, (-((h[0]) + (h[1]))));
-		if ((this.leftBlock) != null) {
-			org.jfree.chart.block.RectangleConstraint c3 = new org.jfree.chart.block.RectangleConstraint(widthRange, 
-			heightRange3);
-			org.jfree.chart.util.Size2D size = this.leftBlock.arrange(g2, c3);
-			w[2] = size.width;
-			h[2] = size.height;
-		}
-		org.jfree.data.Range widthRange2 = org.jfree.data.Range.shift(widthRange, (-(w[2])), false);
-		if ((this.rightBlock) != null) {
-			org.jfree.chart.block.RectangleConstraint c4 = new org.jfree.chart.block.RectangleConstraint(widthRange2, 
-			heightRange3);
-			org.jfree.chart.util.Size2D size = this.rightBlock.arrange(g2, c4);
-			w[3] = size.width;
-			h[3] = size.height;
-		}
 
-		h[2] = java.lang.Math.max(h[2], h[3]);
-		h[3] = h[2];
-		org.jfree.data.Range widthRange3 = org.jfree.data.Range.shift(widthRange, (-((w[2]) + (w[3]))), false);
-		if ((this.centerBlock) != null) {
-			org.jfree.chart.block.RectangleConstraint c5 = new org.jfree.chart.block.RectangleConstraint(widthRange3, 
-			heightRange3);
 
 
 
-			org.jfree.chart.util.Size2D size = this.centerBlock.arrange(g2, c5);
-			w[4] = size.width;
-			h[4] = size.height;
-		}
-		double width = java.lang.Math.max(w[0], java.lang.Math.max(w[1], (((w[2]) + (w[4])) + (w[3]))));
-		double height = ((h[0]) + (h[1])) + (java.lang.Math.max(h[2], java.lang.Math.max(h[3], h[4])));
-		if ((this.topBlock) != null) {
-			this.topBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0, 0.0, width, 
-			h[0]));
-		}
-		if ((this.bottomBlock) != null) {
-			this.bottomBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0, 
-			(height - (h[1])), width, h[1]));
-		}
-		if ((this.leftBlock) != null) {
-			this.leftBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0, h[0], w[2], 
-			h[2]));
-		}
-		if ((this.rightBlock) != null) {
-			this.rightBlock.setBounds(new java.awt.geom.Rectangle2D.Double((width - (w[3])), 
-			h[0], w[3], h[3]));
-		}
 
-		if ((this.centerBlock) != null) {
-			this.centerBlock.setBounds(new java.awt.geom.Rectangle2D.Double(w[2], h[0], 
-			((width - (w[2])) - (w[3])), ((height - (h[0])) - (h[1]))));
-		}
-		return new org.jfree.chart.util.Size2D(width, height);
-	}
 
 
 
@@ -419,73 +212,280 @@
 
 
 
-	protected org.jfree.chart.util.Size2D arrangeFF(org.jfree.chart.block.BlockContainer container, java.awt.Graphics2D g2, 
-	org.jfree.chart.block.RectangleConstraint constraint) {
-		double[] w = new double[5];
-		double[] h = new double[5];
-		w[0] = constraint.getWidth();
-		if ((this.topBlock) != null) {
-			org.jfree.chart.block.RectangleConstraint c1 = new org.jfree.chart.block.RectangleConstraint(w[0], null, 
-			org.jfree.chart.block.LengthConstraintType.FIXED, 0.0, 
-			new org.jfree.data.Range(0.0, constraint.getHeight()), 
-			org.jfree.chart.block.LengthConstraintType.RANGE);
-			org.jfree.chart.util.Size2D size = this.topBlock.arrange(g2, c1);
-			h[0] = size.height;
-		}
-		w[1] = w[0];
-		if ((this.bottomBlock) != null) {
-			org.jfree.chart.block.RectangleConstraint c2 = new org.jfree.chart.block.RectangleConstraint(w[0], null, 
-			org.jfree.chart.block.LengthConstraintType.FIXED, 0.0, new org.jfree.data.Range(0.0, 
-			((constraint.getHeight()) - (h[0]))), org.jfree.chart.block.LengthConstraintType.RANGE);
-			org.jfree.chart.util.Size2D size = this.bottomBlock.arrange(g2, c2);
-			h[1] = size.height;
-		}
-		h[2] = ((constraint.getHeight()) - (h[1])) - (h[0]);
-		if ((this.leftBlock) != null) {
-			org.jfree.chart.block.RectangleConstraint c3 = new org.jfree.chart.block.RectangleConstraint(0.0, 
-			new org.jfree.data.Range(0.0, constraint.getWidth()), 
-			org.jfree.chart.block.LengthConstraintType.RANGE, h[2], null, 
-			org.jfree.chart.block.LengthConstraintType.FIXED);
-			org.jfree.chart.util.Size2D size = this.leftBlock.arrange(g2, c3);
-			w[2] = size.width;
-		}
-		h[3] = h[2];
-		if ((this.rightBlock) != null) {
-			org.jfree.chart.block.RectangleConstraint c4 = new org.jfree.chart.block.RectangleConstraint(0.0, 
-			new org.jfree.data.Range(0.0, ((constraint.getWidth()) - (w[2]))), 
-			org.jfree.chart.block.LengthConstraintType.RANGE, h[2], null, 
-			org.jfree.chart.block.LengthConstraintType.FIXED);
-			org.jfree.chart.util.Size2D size = this.rightBlock.arrange(g2, c4);
-			w[3] = size.width;
-		}
-		h[4] = h[2];
-		w[4] = ((constraint.getWidth()) - (w[3])) - (w[2]);
-		org.jfree.chart.block.RectangleConstraint c5 = new org.jfree.chart.block.RectangleConstraint(w[4], h[4]);
-		if ((this.centerBlock) != null) {
-			this.centerBlock.arrange(g2, c5);
-		}
 
-		if ((this.topBlock) != null) {
-			this.topBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0, 0.0, w[0], 
-			h[0]));
-		}
-		if ((this.bottomBlock) != null) {
-			this.bottomBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0, ((h[0]) + (h[2])), 
-			w[1], h[1]));
-		}
-		if ((this.leftBlock) != null) {
-			this.leftBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0, h[0], w[2], 
-			h[2]));
-		}
-		if ((this.rightBlock) != null) {
-			this.rightBlock.setBounds(new java.awt.geom.Rectangle2D.Double(((w[2]) + (w[4])), h[0], 
-			w[3], h[3]));
-		}
-		if ((this.centerBlock) != null) {
-			this.centerBlock.setBounds(new java.awt.geom.Rectangle2D.Double(w[2], h[0], w[4], 
-			h[4]));
-		}
-		return new org.jfree.chart.util.Size2D(constraint.getWidth(), constraint.getHeight());
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+						new org.jfree.chart.util.Size2D(constraint.getWidth(), constraint.getHeight());}else 						if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) { 							contentSize = arrangeFR(container, g2, constraint);}}else 				if (w == (org.jfree.chart.block.LengthConstraintType.RANGE)) { 					if (h == (org.jfree.chart.block.LengthConstraintType.NONE)) { 						throw new java.lang.RuntimeException("Not implemented.");}else 						if (h == (org.jfree.chart.block.LengthConstraintType.FIXED)) { 							throw new java.lang.RuntimeException("Not implemented.");}else 							if (h == (org.jfree.chart.block.LengthConstraintType.RANGE)) { 								contentSize = arrangeRR(container, constraint.getWidthRange(), constraint.getHeightRange(), g2);}} 		return new org.jfree.chart.util.Size2D(container.calculateTotalWidth(contentSize.getWidth()), container.calculateTotalHeight(contentSize.getHeight()));} 	protected org.jfree.chart.util.Size2D arrangeNN(org.jfree.chart.block.BlockContainer container, java.awt.Graphics2D g2) { 		double[] w = new double[5]; 		double[] h = new double[5]; 		if ((this.topBlock) != null) { 			org.jfree.chart.util.Size2D size = this.topBlock.arrange(g2, org.jfree.chart.block.RectangleConstraint.NONE); 			w[0] = size.width; 			h[0] = size.height;} 		if ((this.bottomBlock) != null) { 			org.jfree.chart.util.Size2D size = this.bottomBlock.arrange(g2, org.jfree.chart.block.RectangleConstraint.NONE); 			w[1] = size.width; 			h[1] = size.height;} 		if ((this.leftBlock) != null) { 			org.jfree.chart.util.Size2D size = this.leftBlock.arrange(g2, org.jfree.chart.block.RectangleConstraint.NONE); 			w[2] = size.width; 			h[2] = size.height;} 		if ((this.rightBlock) != null) { 			org.jfree.chart.util.Size2D size = this.rightBlock.arrange(g2, org.jfree.chart.block.RectangleConstraint.NONE); 			w[3] = size.width; 			h[3] = size.height;} 		h[2] = java.lang.Math.max(h[2], h[3]); 		h[3] = h[2]; 		if ((this.centerBlock) != null) { 			org.jfree.chart.util.Size2D size = this.centerBlock.arrange(g2, org.jfree.chart.block.RectangleConstraint.NONE); 			w[4] = size.width; 			h[4] = size.height;} 		double width = java.lang.Math.max(w[0], java.lang.Math.max(w[1], (((w[2]) + (w[4])) + (w[3])))); 		double centerHeight = java.lang.Math.max(h[2], java.lang.Math.max(h[3], h[4])); 		double height = ((h[0]) + (h[1])) + centerHeight; 		if ((this.topBlock) != null) { 			this.topBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0, 0.0, width, h[0]));} 		if ((this.bottomBlock) != null) { 			this.bottomBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0, (height - (h[1])), width, h[1]));} 		if ((this.leftBlock) != null) { 			this.leftBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0, h[0], w[2], centerHeight));} 		if ((this.rightBlock) != null) { 			this.rightBlock.setBounds(new java.awt.geom.Rectangle2D.Double((width - (w[3])), h[0], w[3], centerHeight));} 		if ((this.centerBlock) != null) { 			this.centerBlock.setBounds(new java.awt.geom.Rectangle2D.Double(w[2], h[0], ((width - (w[2])) - (w[3])), centerHeight));} 		return new org.jfree.chart.util.Size2D(width, height);} 	protected org.jfree.chart.util.Size2D arrangeFR(org.jfree.chart.block.BlockContainer container, java.awt.Graphics2D g2, org.jfree.chart.block.RectangleConstraint constraint) { 		org.jfree.chart.util.Size2D size1 = arrangeFN(container, g2, constraint.getWidth()); 		if (constraint.getHeightRange().contains(size1.getHeight())) { 			return size1;}else { 			double h = constraint.getHeightRange().constrain(size1.getHeight()); 			org.jfree.chart.block.RectangleConstraint c2 = constraint.toFixedHeight(h); 			return arrange(container, g2, c2);}} 	protected org.jfree.chart.util.Size2D arrangeFN(org.jfree.chart.block.BlockContainer container, java.awt.Graphics2D g2, double width) { 		double[] w = new double[5]; 		double[] h = new double[5]; 		org.jfree.chart.block.RectangleConstraint c1 = new org.jfree.chart.block.RectangleConstraint(width, null, org.jfree.chart.block.LengthConstraintType.FIXED, 0.0, null, org.jfree.chart.block.LengthConstraintType.NONE); 		if ((this.topBlock) != null) { 			org.jfree.chart.util.Size2D size = this.topBlock.arrange(g2, c1); 			w[0] = size.width; 			h[0] = size.height;} 		if ((this.bottomBlock) != null) { 			org.jfree.chart.util.Size2D size = this.bottomBlock.arrange(g2, c1); 			w[1] = size.width; 			h[1] = size.height;} 		org.jfree.chart.block.RectangleConstraint c2 = new org.jfree.chart.block.RectangleConstraint(0.0, new org.jfree.data.Range(0.0, width), org.jfree.chart.block.LengthConstraintType.RANGE, 0.0, null, org.jfree.chart.block.LengthConstraintType.NONE); 		if ((this.leftBlock) != null) { 			org.jfree.chart.util.Size2D size = this.leftBlock.arrange(g2, c2); 			w[2] = size.width; 			h[2] = size.height;} 		if ((this.rightBlock) != null) { 			double maxW = java.lang.Math.max((width - (w[2])), 0.0); 			org.jfree.chart.block.RectangleConstraint c3 = new org.jfree.chart.block.RectangleConstraint(0.0, new org.jfree.data.Range(java.lang.Math.min(w[2], maxW), maxW), org.jfree.chart.block.LengthConstraintType.RANGE, 0.0, null, org.jfree.chart.block.LengthConstraintType.NONE); 			org.jfree.chart.util.Size2D size = this.rightBlock.arrange(g2, c3); 			w[3] = size.width; 			h[3] = size.height;} 		h[2] = java.lang.Math.max(h[2], h[3]); 		h[3] = h[2]; 		if ((this.centerBlock) != null) { 			org.jfree.chart.block.RectangleConstraint c4 = new org.jfree.chart.block.RectangleConstraint(((width - (w[2])) - (w[3])), null, org.jfree.chart.block.LengthConstraintType.FIXED, 0.0, null, org.jfree.chart.block.LengthConstraintType.NONE); 			org.jfree.chart.util.Size2D size = this.centerBlock.arrange(g2, c4); 			w[4] = size.width; 			h[4] = size.height;} 		double height = ((h[0]) + (h[1])) + (java.lang.Math.max(h[2], java.lang.Math.max(h[3], h[4]))); 		return arrange(container, g2, new org.jfree.chart.block.RectangleConstraint(width, height));} 	protected org.jfree.chart.util.Size2D arrangeRR(org.jfree.chart.block.BlockContainer container, org.jfree.data.Range widthRange, org.jfree.data.Range heightRange, java.awt.Graphics2D g2) { 		double[] w = new double[5]; 		double[] h = new double[5]; 		if ((this.topBlock) != null) { 			org.jfree.chart.block.RectangleConstraint c1 = new org.jfree.chart.block.RectangleConstraint(widthRange, heightRange); 			org.jfree.chart.util.Size2D size = this.topBlock.arrange(g2, c1); 			w[0] = size.width; 			h[0] = size.height;} 		if ((this.bottomBlock) != null) { 			org.jfree.data.Range heightRange2 = org.jfree.data.Range.shift(heightRange, (-(h[0])), false); 			org.jfree.chart.block.RectangleConstraint c2 = new org.jfree.chart.block.RectangleConstraint(widthRange, heightRange2); 			org.jfree.chart.util.Size2D size = this.bottomBlock.arrange(g2, c2); 			w[1] = size.width; 			h[1] = size.height;} 		org.jfree.data.Range heightRange3 = org.jfree.data.Range.shift(heightRange, (-((h[0]) + (h[1])))); 		if ((this.leftBlock) != null) { 			org.jfree.chart.block.RectangleConstraint c3 = new org.jfree.chart.block.RectangleConstraint(widthRange, heightRange3); 			org.jfree.chart.util.Size2D size = this.leftBlock.arrange(g2, c3); 			w[2] = size.width; 			h[2] = size.height;} 		org.jfree.data.Range widthRange2 = org.jfree.data.Range.shift(widthRange, (-(w[2])), false); 		if ((this.rightBlock) != null) { 			org.jfree.chart.block.RectangleConstraint c4 = new org.jfree.chart.block.RectangleConstraint(widthRange2, heightRange3); 			org.jfree.chart.util.Size2D size = this.rightBlock.arrange(g2, c4); 			w[3] = size.width; 			h[3] = size.height;} 		h[2] = java.lang.Math.max(h[2], h[3]); 		h[3] = h[2]; 		org.jfree.data.Range widthRange3 = org.jfree.data.Range.shift(widthRange, (-((w[2]) + (w[3]))), false); 		if ((this.centerBlock) != null) { 			org.jfree.chart.block.RectangleConstraint c5 = new org.jfree.chart.block.RectangleConstraint(widthRange3, heightRange3); 			org.jfree.chart.util.Size2D size = this.centerBlock.arrange(g2, c5); 			w[4] = size.width; 			h[4] = size.height;} 		double width = java.lang.Math.max(w[0], java.lang.Math.max(w[1], (((w[2]) + (w[4])) + (w[3])))); 		double height = ((h[0]) + (h[1])) + (java.lang.Math.max(h[2], java.lang.Math.max(h[3], h[4]))); 		if ((this.topBlock) != null) { 			this.topBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0, 0.0, width, h[0]));} 		if ((this.bottomBlock) != null) { 			this.bottomBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0, (height - (h[1])), width, h[1]));} 		if ((this.leftBlock) != null) { 			this.leftBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0, h[0], w[2], h[2]));} 		if ((this.rightBlock) != null) { 			this.rightBlock.setBounds(new java.awt.geom.Rectangle2D.Double((width - (w[3])), h[0], w[3], h[3]));} 		if ((this.centerBlock) != null) { 			this.centerBlock.setBounds(new java.awt.geom.Rectangle2D.Double(w[2], h[0], ((width - (w[2])) - (w[3])), ((height - (h[0])) - (h[1]))));} 		return new org.jfree.chart.util.Size2D(width, height);} 	protected org.jfree.chart.util.Size2D arrangeFF(org.jfree.chart.block.BlockContainer container, java.awt.Graphics2D g2, org.jfree.chart.block.RectangleConstraint constraint) { 		double[] w = new double[5]; 		double[] h = new double[5]; 		w[0] = constraint.getWidth(); 		if ((this.topBlock) != null) { 			org.jfree.chart.block.RectangleConstraint c1 = new org.jfree.chart.block.RectangleConstraint(w[0], null, org.jfree.chart.block.LengthConstraintType.FIXED, 0.0, new org.jfree.data.Range(0.0, constraint.getHeight()), org.jfree.chart.block.LengthConstraintType.RANGE); 			org.jfree.chart.util.Size2D size = this.topBlock.arrange(g2, c1); 			h[0] = size.height;} 		w[1] = w[0]; 		if ((this.bottomBlock) != null) { 			org.jfree.chart.block.RectangleConstraint c2 = new org.jfree.chart.block.RectangleConstraint(w[0], null, org.jfree.chart.block.LengthConstraintType.FIXED, 0.0, new org.jfree.data.Range(0.0, ((constraint.getHeight()) - (h[0]))), org.jfree.chart.block.LengthConstraintType.RANGE); 			org.jfree.chart.util.Size2D size = this.bottomBlock.arrange(g2, c2); 			h[1] = size.height;} 		h[2] = ((constraint.getHeight()) - (h[1])) - (h[0]); 		if ((this.leftBlock) != null) { 			org.jfree.chart.block.RectangleConstraint c3 = new org.jfree.chart.block.RectangleConstraint(0.0, new org.jfree.data.Range(0.0, constraint.getWidth()), org.jfree.chart.block.LengthConstraintType.RANGE, h[2], null, org.jfree.chart.block.LengthConstraintType.FIXED); 			org.jfree.chart.util.Size2D size = this.leftBlock.arrange(g2, c3); 			w[2] = size.width;} 		h[3] = h[2]; 		if ((this.rightBlock) != null) { 			org.jfree.chart.block.RectangleConstraint c4 = new org.jfree.chart.block.RectangleConstraint(0.0, new org.jfree.data.Range(0.0, ((constraint.getWidth()) - (w[2]))), org.jfree.chart.block.LengthConstraintType.RANGE, h[2], null, org.jfree.chart.block.LengthConstraintType.FIXED); 			org.jfree.chart.util.Size2D size = this.rightBlock.arrange(g2, c4); 			w[3] = size.width;} 		h[4] = h[2]; 		w[4] = ((constraint.getWidth()) - (w[3])) - (w[2]); 		org.jfree.chart.block.RectangleConstraint c5 = new org.jfree.chart.block.RectangleConstraint(w[4], h[4]); 		if ((this.centerBlock) != null) { 			this.centerBlock.arrange(g2, c5);} 		if ((this.topBlock) != null) { 			this.topBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0, 0.0, w[0], h[0]));} 		if ((this.bottomBlock) != null) { 			this.bottomBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0, ((h[0]) + (h[2])), w[1], h[1]));} 		if ((this.leftBlock) != null) { 			this.leftBlock.setBounds(new java.awt.geom.Rectangle2D.Double(0.0, h[0], w[2], h[2]));} 		if ((this.rightBlock) != null) { 			this.rightBlock.setBounds(new java.awt.geom.Rectangle2D.Double(((w[2]) + (w[4])), h[0], w[3], h[3]));} 		if ((this.centerBlock) != null) { 			this.centerBlock.setBounds(new java.awt.geom.Rectangle2D.Double(w[2], h[0], w[4], h[4]));} 		return new org.jfree.chart.util.Size2D(constraint.getWidth(), constraint.getHeight());
 	}
 
 



[INFO ] fr.inria.main.evolution.AstorMain.run(AstorMain.java:271) - Time Total(s): 1343.507
237.38user 14.06system 22:27.46elapsed 18%CPU (0avgtext+0avgdata 901724maxresident)k
20392inputs+137704outputs (58major+2404943minor)pagefaults 0swaps


Node: ubuntu



Date: Sun Jul 21 00:37:20 EDT 2019

