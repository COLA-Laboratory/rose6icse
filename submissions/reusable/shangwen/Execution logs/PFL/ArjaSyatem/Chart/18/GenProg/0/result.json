{
  "repair_end": "2019-06-26 05:33:48.380496", 
  "repair_begin": "2019-06-26 05:19:38.855486", 
  "patches": [
    {
      "diff": "--- /tmp/GenProg_Defects4J_Chart_18/source/org/jfree/data/DefaultKeyedValues2D.java\t2019-06-25 17:19:06.828764944 -0400\n+++ /tmp/GenProg_Defects4J_Chart_18/patches_ru94/Patch_1413/patched/org/jfree/data/DefaultKeyedValues2D.java\t2019-06-25 17:33:47.981628400 -0400\n@@ -455,9 +455,10 @@\n         Iterator iterator = this.rows.iterator();\n         while (iterator.hasNext()) {\n             DefaultKeyedValues rowData = (DefaultKeyedValues) iterator.next();\n-                rowData.removeValue(columnKey);\n         }\n-        this.columnKeys.remove(columnKey);\n+        if (!(this.columnKeys.contains(columnKey))) {\n+\t\t\tthrow new UnknownKeyException(\"Unrecognised columnKey: \" + columnKey);\n+\t\t}\n     }\n \n     /**\n\n\n--- /tmp/GenProg_Defects4J_Chart_18/source/org/jfree/data/DefaultKeyedValues.java\t2019-06-25 17:19:06.828764944 -0400\n+++ /tmp/GenProg_Defects4J_Chart_18/patches_ru94/Patch_1413/patched/org/jfree/data/DefaultKeyedValues.java\t2019-06-25 17:33:47.985628459 -0400\n@@ -315,9 +315,7 @@\n     public void removeValue(int index) {\n         this.keys.remove(index);\n         this.values.remove(index);\n-        if (index < this.keys.size()) {\n-        rebuildIndex();\n-        }\n+        this.indexMap.clear();\n     }\n \n     /**\n@@ -332,6 +330,9 @@\n     public void removeValue(Comparable key) {\n         int index = getIndex(key);\n         if (index < 0) {\n+\t\t\tif (index < 0) {\n+\t\t\t\tthrow new UnknownKeyException(\"Key not found: \" + key);\n+\t\t\t}\n \t\t\treturn;\n         }\n         removeValue(index);\n\n\n", 
      "edits": [
        {
          "path": "source/org/jfree/data/DefaultKeyedValues.java", 
          "line": 318, 
          "faulty": "if (index < this.keys.size()) {\n  rebuildIndex();\n}", 
          "type": "Replace", 
          "seed": "this.indexMap.clear();"
        }, 
        {
          "path": "source/org/jfree/data/DefaultKeyedValues.java", 
          "line": 318, 
          "faulty": "if (index < this.keys.size()) {\n  rebuildIndex();\n}", 
          "type": "Replace", 
          "seed": "this.indexMap.clear();"
        }, 
        {
          "path": "source/org/jfree/data/DefaultKeyedValues.java", 
          "line": 318, 
          "faulty": "if (index < this.keys.size()) {\n  rebuildIndex();\n}", 
          "type": "Replace", 
          "seed": "this.indexMap.clear();"
        }, 
        {
          "path": "source/org/jfree/data/DefaultKeyedValues.java", 
          "line": 335, 
          "faulty": "return;", 
          "type": "InsertBefore", 
          "seed": "if (index < 0) {\n  throw new UnknownKeyException(\"Key not found: \" + key);\n}"
        }, 
        {
          "path": "source/org/jfree/data/DefaultKeyedValues2D.java", 
          "line": 458, 
          "faulty": "rowData.removeValue(columnKey);", 
          "type": "Delete", 
          "seed": "fireSeriesChanged();"
        }, 
        {
          "path": "source/org/jfree/data/DefaultKeyedValues2D.java", 
          "line": 458, 
          "faulty": "rowData.removeValue(columnKey);", 
          "type": "Delete", 
          "seed": "KeyedObjects2D clone=(KeyedObjects2D)super.clone();"
        }, 
        {
          "path": "source/org/jfree/data/DefaultKeyedValues2D.java", 
          "line": 460, 
          "faulty": "this.columnKeys.remove(columnKey);", 
          "type": "Replace", 
          "seed": "if (!(this.columnKeys.contains(columnKey))) {\n  throw new UnknownKeyException(\"Unrecognised columnKey: \" + columnKey);\n}"
        }
      ]
    }
  ]
}