{
  "repair_end": "2019-08-13 19:55:26.227431", 
  "repair_begin": "2019-08-13 19:33:29.223696", 
  "patches": [
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/TypeCheck.java", 
          "line": 1661, 
          "faulty": "if (fnType != null) {\n  visitParameterList(t,n,fnType);\n  ensureTyped(t,n,fnType.getInstanceType());\n}\n else {\n  ensureTyped(t,n);\n}", 
          "type": "Replace", 
          "seed": "final String paramName=\"jscomp_throw_param\";"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Defects4J_Closure_125/src/com/google/javascript/jscomp/TypeCheck.java\t2019-08-13 22:32:03.466866445 -0400\n+++ /tmp/RSRepair_Defects4J_Closure_125/patches_xmdf/Patch_1/patched/com/google/javascript/jscomp/TypeCheck.java\t2019-08-13 22:55:26.181657677 -0400\n@@ -1658,12 +1658,7 @@\n     JSType type = getJSType(constructor).restrictByNotNullOrUndefined();\n     if (type.isConstructor() || type.isEmptyType() || type.isUnknownType()) {\n       FunctionType fnType = type.toMaybeFunctionType();\n-      if (fnType != null) {\n-        visitParameterList(t, n, fnType);\n-        ensureTyped(t, n, fnType.getInstanceType());\n-      } else {\n-        ensureTyped(t, n);\n-      }\n+      final String paramName = \"jscomp_throw_param\";\n     } else {\n       report(t, n, NOT_A_CONSTRUCTOR);\n       ensureTyped(t, n);\n\n\n"
    }
  ]
}