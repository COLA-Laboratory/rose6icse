{
  "repair_end": "2019-08-03 19:36:23.397467", 
  "repair_begin": "2019-08-03 18:12:53.313863", 
  "patches": [
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java", 
          "line": 124, 
          "faulty": "return row;", 
          "type": "Delete", 
          "seed": "for (int i=tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {\n  final double rhs=tableau.getEntry(i,tableau.getWidth() - 1);\n  final double entry=tableau.getEntry(i,col);\n  if (Precision.compareTo(entry,0d,maxUlps) > 0) {\n    final double ratio=rhs / entry;\n    final int cmp=Double.compare(ratio,minRatio);\n    if (cmp == 0) {\n      minRatioPositions.add(i);\n    }\n else     if (cmp < 0) {\n      minRatio=ratio;\n      minRatioPositions=new ArrayList<Integer>();\n      minRatioPositions.add(i);\n    }\n  }\n}"
        }
      ], 
      "patch": "--- /tmp/Arja_Defects4J_Math_28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java\t2019-08-03 21:11:42.146700824 -0400\n+++ /tmp/Arja_Defects4J_Math_28/patches_4x0w/Patch_1/patched/org/apache/commons/math3/optimization/linear/SimplexSolver.java\t2019-08-03 22:36:22.989297069 -0400\n@@ -121,7 +121,6 @@\n                         int column = i + tableau.getArtificialVariableOffset();\n                         final double entry = tableau.getEntry(row, column);\n                         if (Precision.equals(entry, 1d, maxUlps) && row.equals(tableau.getBasicRow(column))) {\n-                            return row;\n                         }\n                     }\n                 }\n\n\n"
    }
  ]
}