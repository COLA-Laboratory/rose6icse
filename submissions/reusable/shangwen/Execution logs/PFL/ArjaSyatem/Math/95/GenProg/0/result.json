{
  "repair_end": "2019-07-09 20:10:24.334186", 
  "repair_begin": "2019-07-09 20:00:53.302564", 
  "patches": [
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java\t2019-07-09 08:00:26.104174318 -0400\n+++ /tmp/GenProg_Defects4J_Math_95/patches_3he6/Patch_956/patched/org/apache/commons/math/distribution/FDistributionImpl.java\t2019-07-09 08:10:23.942262604 -0400\n@@ -141,10 +141,15 @@\n      * @return initial domain value\n      */\n     protected double getInitialDomain(double p) {\n-        double ret;\n+        if (p == 0) {\n+\t\t\treturn -1;\n+\t\t}\n+\t\tif (p == 0) {\n+\t\t\treturn -1;\n+\t\t}\n+\t\tdouble ret;\n         double d = getDenominatorDegreesOfFreedom();\n-            // use mean\n-            ret = d / (d - 2.0);\n+            ret = 0.0;\n         return ret;\n     }\n     \n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/distribution/FDistributionImpl.java", 
          "line": 144, 
          "faulty": "double ret;", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return -1;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/FDistributionImpl.java", 
          "line": 144, 
          "faulty": "double ret;", 
          "type": "InsertBefore", 
          "seed": "if (p == 0) {\n  return -1;\n}"
        }, 
        {
          "path": "src/java/org/apache/commons/math/distribution/FDistributionImpl.java", 
          "line": 147, 
          "faulty": "ret=d / (d - 2.0);", 
          "type": "Replace", 
          "seed": "ret=0.0;"
        }
      ]
    }
  ]
}