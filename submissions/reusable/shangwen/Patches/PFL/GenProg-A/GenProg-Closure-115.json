{
  "repair_end": "2019-08-14 11:13:20.904210", 
  "repair_begin": "2019-08-14 10:51:17.272540", 
  "patches": [
    {
      "diff": "--- /tmp/GenProg_Defects4J_Closure_115/src/com/google/javascript/jscomp/FunctionInjector.java\t2019-08-13 22:49:35.765894855 -0400\n+++ /tmp/GenProg_Defects4J_Closure_115/patches_lqr1/Patch_1/patched/com/google/javascript/jscomp/FunctionInjector.java\t2019-08-13 23:13:20.834910972 -0400\n@@ -695,13 +695,6 @@\n     Node block = fnNode.getLastChild();\n \n     boolean hasSideEffects = false;\n-    if (block.hasChildren()) {\n-      Preconditions.checkState(block.hasOneChild());\n-      Node stmt = block.getFirstChild();\n-      if (stmt.isReturn()) {\n-        hasSideEffects = NodeUtil.mayHaveSideEffects(stmt.getFirstChild(), compiler);\n-      }\n-    }\n     // CALL NODE: [ NAME, ARG1, ARG2, ... ]\n     Node cArg = callNode.getFirstChild().getNext();\n \n\n\n", 
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/FunctionInjector.java", 
          "line": 698, 
          "faulty": "if (block.hasChildren()) {\n  Preconditions.checkState(block.hasOneChild());\n  Node stmt=block.getFirstChild();\n  if (stmt.isReturn()) {\n    hasSideEffects=NodeUtil.mayHaveSideEffects(stmt.getFirstChild(),compiler);\n  }\n}", 
          "type": "Delete", 
          "seed": "return new DefaultCodingConvention();"
        }
      ]
    }
  ]
}