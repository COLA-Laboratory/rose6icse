{
  "repair_end": "2019-06-10 10:51:05.637935", 
  "repair_begin": "2019-06-10 10:46:24.082868", 
  "patches": [
    {
      "PATCH_DIFF_ORIG": "--- \\/tmp\\/Cardumen_Defects4J_Chart_1\\/source\\/org\\/jfree\\/chart\\/renderer\\/category\\/AbstractCategoryItemRendererjava\\n+++ \\/tmp\\/Cardumen_Defects4J_Chart_1\\/source\\/org\\/jfree\\/chart\\/renderer\\/category\\/AbstractCategoryItemRendererjava\\n@@ -1794,32 +1794,7 @@\\n \\t\\t}\\n \\t\\tint index = this.plot.getIndexOf(this);\\n \\t\\torg.jfree.data.category.CategoryDataset dataset = this.plot.getDataset(index);\\n-\\t\\tif (dataset != null) {\\n-\\t\\t\\treturn result;\\n-\\t\\t}\\n-\\t\\tint seriesCount = dataset.getRowCount();\\n-\\t\\tif (plot.getRowRenderingOrder().equals(org.jfree.chart.util.SortOrder.ASCENDING)) {\\n-\\t\\t\\tfor (int i = 0; i < seriesCount; i++) {\\n-\\t\\t\\t\\tif (isSeriesVisibleInLegend(i)) {\\n-\\t\\t\\t\\t\\torg.jfree.chart.LegendItem item = getLegendItem(index, i);\\n-\\t\\t\\t\\t\\tif (item != null) {\\n-\\t\\t\\t\\t\\t\\tresult.add(item);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}else \\n-\\t\\t{\\n-\\t\\t\\tfor (int i = seriesCount - 1; i >= 0; i--) {\\n-\\t\\t\\t\\tif (isSeriesVisibleInLegend(i)) {\\n-\\t\\t\\t\\t\\torg.jfree.chart.LegendItem item = getLegendItem(index, i);\\n-\\t\\t\\t\\t\\tif (item != null) {\\n-\\t\\t\\t\\t\\t\\tresult.add(item);\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn result;\\n-\\t}\\n+\\t\\tif (\\n \\n \\n \\n@@ -1833,14 +1808,7 @@\\n \\n \\n \\n-\\tprotected void addEntity(org.jfree.chart.entity.EntityCollection entities, java.awt.Shape hotspot, \\n-\\torg.jfree.data.category.CategoryDataset dataset, int row, int column, boolean selected) {\\n \\n-\\t\\tif (hotspot == null) {\\n-\\t\\t\\tthrow new java.lang.IllegalArgumentException(\\\"Null 'hotspot' argument.\\\");\\n-\\t\\t}\\n-\\t\\taddEntity(entities, hotspot, dataset, row, column, selected, 0.0, 0.0);\\n-\\t}\\n \\n \\n \\n@@ -1859,32 +1827,64 @@\\n \\n \\n \\n-\\tprotected void addEntity(org.jfree.chart.entity.EntityCollection entities, java.awt.Shape hotspot, \\n-\\torg.jfree.data.category.CategoryDataset dataset, int row, int column, boolean selected, \\n-\\tdouble entityX, double entityY) {\\n-\\t\\tif (!(getItemCreateEntity(row, column, selected))) {\\n-\\t\\t\\treturn;\\n-\\t\\t}\\n-\\t\\tjava.awt.Shape s = hotspot;\\n-\\t\\tif (hotspot == null) {\\n-\\t\\t\\tdouble r = getDefaultEntityRadius();\\n-\\t\\t\\tdouble w = r * 2;\\n-\\t\\t\\tif ((getPlot().getOrientation()) == (org.jfree.chart.plot.PlotOrientation.VERTICAL)) {\\n-\\t\\t\\t\\ts = new java.awt.geom.Ellipse2D.Double((entityX - r), (entityY - r), w, w);\\n-\\t\\t\\t}else \\n-\\t\\t\\t{\\n-\\t\\t\\t\\ts = new java.awt.geom.Ellipse2D.Double((entityY - r), (entityX - r), w, w);\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tjava.lang.String tip = null;\\n-\\t\\torg.jfree.chart.labels.CategoryToolTipGenerator generator = getToolTipGenerator(row, column, \\n-\\t\\tselected);\\n-\\t\\tif (generator != null) {\\n-\\t\\t\\ttip = generator.generateToolTip(dataset, row, column);\\n-\\t\\t}\\n-\\t\\tjava.lang.String url = null;\\n-\\t\\torg.jfree.chart.urls.CategoryURLGenerator urlster = getURLGenerator(row, column, selected);\\n-\\t\\tif (urlster != null) {\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t(baseURLGenerator) != null) { \\t\\t\\treturn result;} \\t\\tint seriesCount = dataset.getRowCount(); \\t\\tif (plot.getRowRenderingOrder().equals(org.jfree.chart.util.SortOrder.ASCENDING)) { \\t\\t\\tfor (int i = 0; i < seriesCount; i++) { \\t\\t\\t\\tif (isSeriesVisibleInLegend(i)) { \\t\\t\\t\\t\\torg.jfree.chart.LegendItem item = getLegendItem(index, i); \\t\\t\\t\\t\\tif (item != null) { \\t\\t\\t\\t\\t\\tresult.add(item);}}}}else { \\t\\t\\tfor (int i = seriesCount - 1; i >= 0; i--) { \\t\\t\\t\\tif (isSeriesVisibleInLegend(i)) { \\t\\t\\t\\t\\torg.jfree.chart.LegendItem item = getLegendItem(index, i); \\t\\t\\t\\t\\tif (item != null) { \\t\\t\\t\\t\\t\\tresult.add(item);}}}} \\t\\treturn result;} \\tprotected void addEntity(org.jfree.chart.entity.EntityCollection entities, java.awt.Shape hotspot, org.jfree.data.category.CategoryDataset dataset, int row, int column, boolean selected) { \\t\\tif (hotspot == null) { \\t\\t\\tthrow new java.lang.IllegalArgumentException(\\\"Null 'hotspot' argument.\\\");} \\t\\taddEntity(entities, hotspot, dataset, row, column, selected, 0.0, 0.0);} \\tprotected void addEntity(org.jfree.chart.entity.EntityCollection entities, java.awt.Shape hotspot, org.jfree.data.category.CategoryDataset dataset, int row, int column, boolean selected, double entityX, double entityY) { \\t\\tif (!(getItemCreateEntity(row, column, selected))) { \\t\\t\\treturn;} \\t\\tjava.awt.Shape s = hotspot; \\t\\tif (hotspot == null) { \\t\\t\\tdouble r = getDefaultEntityRadius(); \\t\\t\\tdouble w = r * 2; \\t\\t\\tif ((getPlot().getOrientation()) == (org.jfree.chart.plot.PlotOrientation.VERTICAL)) { \\t\\t\\t\\ts = new java.awt.geom.Ellipse2D.Double((entityX - r), (entityY - r), w, w);}else { \\t\\t\\t\\ts = new java.awt.geom.Ellipse2D.Double((entityY - r), (entityX - r), w, w);}} \\t\\tjava.lang.String tip = null; \\t\\torg.jfree.chart.labels.CategoryToolTipGenerator generator = getToolTipGenerator(row, column, selected); \\t\\tif (generator != null) { \\t\\t\\ttip = generator.generateToolTip(dataset, row, column);} \\t\\tjava.lang.String url = null; \\t\\torg.jfree.chart.urls.CategoryURLGenerator urlster = getURLGenerator(row, column, selected); \\t\\tif (urlster != null) {\\n \\t\\t\\turl = urlster.generateURL(dataset, row, column);\\n \\t\\t}\\n \\t\\torg.jfree.chart.entity.CategoryItemEntity entity = new org.jfree.chart.entity.CategoryItemEntity(s, tip, url, \\n\\n", 
      "patchhunks": [
        {
          "MODIFIED_FILE_PATH": "\\/tmp\\/Cardumen_Defects4J_Chart_1\\/.\\/output_astor\\/AstorMain-Chart-1\\/\\/src\\/\\/variant-192\\/org\\/jfree\\/chart\\/renderer\\/category\\/AbstractCategoryItemRenderer.java", 
          "ORIGINAL_CODE": "dataset != null", 
          "INGREDIENT_SCOPE": "-", 
          "PATCH_HUNK_CODE": "(baseURLGenerator) != null", 
          "INGREDIENT_PARENT": "_CategoryURLGenerator_0 != null", 
          "LOCATION": "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer", 
          "BUGGY_CODE_TYPE": "CtBinaryOperatorImpl|CtIfImpl", 
          "OPERATOR": "ExpressionReplaceOperator", 
          "PATH": "\\/tmp\\/Cardumen_Defects4J_Chart_1\\/source\\/org\\/jfree\\/chart\\/renderer\\/category\\/AbstractCategoryItemRenderer.java", 
          "LINE": "1797", 
          "MP_RANKING": "35", 
          "SUSPICIOUNESS": "0.162", 
          "PATCH_HUNK_TYPE": "CtBinaryOperatorImpl|CtIfImpl"
        }
      ], 
      "GENERATION": "96", 
      "VARIANT_ID": "192", 
      "TIME": "102", 
      "VALIDATION": "|true|0|4402|[]|", 
      "FOLDER_SOLUTION_CODE": "\\/tmp\\/Cardumen_Defects4J_Chart_1\\/.\\/output_astor\\/AstorMain-Chart-1\\/\\/bin\\/\\/variant-192"
    }
  ]
}