{
  "repair_end": "2019-08-13 06:35:28.717126", 
  "repair_begin": "2019-08-13 06:29:34.705885", 
  "patches": [
    {
      "nb_test_that_execute_statement": 19, 
      "patchLocation": {
        "line": 593, 
        "class": "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer"
      }, 
      "patchType": "PRECONDITION", 
      "patch": "--- a/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java\n+++ b/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java\n@@ -592,5 +592,7 @@\n             // compute the Newton correction\n-            for (int j = 0; j < solvedCols; ++j) {\n-                int pj = permutation[j];\n-                work1[pj] = work3[pj] * diag[pj] / dxNorm;\n+            if (org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.this.orthoTolerance < gNorm) {\n+                for (int j = 0; j < solvedCols; ++j) {\n+                    int pj = permutation[j];\n+                    work1[pj] = work3[pj] * diag[pj] / dxNorm;\n+                }\n             }\n"
    }
  ]
}