cd /tmp/jKali_Defects4J_Time_3;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/home/wp/tool/jdk1.8.0_71/bin/:$PATH";
export JAVA_HOME="/home/wp/tool/jdk1.8.0_71/bin/";
time java -Xmx1g -Xms1g -cp /home/wp/RepairThemAll/script/../libs/jtestex7.jar:/home/wp/RepairThemAll/script/../repair_tools/astor.jar fr.inria.main.evolution.AstorMain \
	-mode jkali \
        -benchmark Defects4J \
	-location . \
	-id Time-3 \
	-failing org.joda.time.TestMutableDateTime_Adds \
	-jvm4testexecution /home/wp/tool/jdk1.7.0_80/bin/ \
	-jvm4evosuitetestexecution /home/wp/tool/jdk1.7.0_80/bin/ \
	-maxgen 1000000 \
	-maxtime 120 \
	-stopfirst true \
	-seed 0 \
	-scope local \
	-population 1 \
	-javacompliancelevel 5 \
	-srcjavafolder src/main/java/ \
	-srctestfolder src/test/java/ \
	-binjavafolder target/classes/ \
	-bintestfolder target/test-classes/ \
	-parameters x:x \
	-dependencies /tmp/jKali_Defects4J_Time_3/target/classes/:/tmp/jKali_Defects4J_Time_3/target/test-classes/:/home/wp/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Time/lib/junit-3.8.2.jar:/home/wp/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Time/lib/joda-convert-1.2.jar:/home/wp/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Time/lib/org/joda/joda-convert/1.2/joda-convert-1.2.jar:/home/wp/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Time/lib/junit/junit/3.8.2/junit-3.8.2.jar;
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:22 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 5:52:23 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
[INFO ] fr.inria.astor.core.setup.ProjectConfiguration.getVersionJDK(ProjectConfiguration.java:282) - Version of the JVM used: 1.7.0_80
[INFO ] fr.inria.main.AbstractMain.processArguments(AbstractMain.java:388) - Java version of the JDK used to run tests: 1.7.0_80
[INFO ] fr.inria.main.AbstractMain.processArguments(AbstractMain.java:389) - The compliance of the JVM is:  7
[INFO ] fr.inria.main.AbstractMain.processArguments(AbstractMain.java:667) - command line arguments: [-mode  jkali  -benchmark  Defects4J  -location  .  -id  Time-3  -failing  org.joda.time.TestMutableDateTime_Adds  -jvm4testexecution  /home/wp/tool/jdk1.7.0_80/bin/  -jvm4evosuitetestexecution  /home/wp/tool/jdk1.7.0_80/bin/  -maxgen  1000000  -maxtime  120  -stopfirst  true  -seed  0  -scope  local  -population  1  -javacompliancelevel  5  -srcjavafolder  src/main/java/  -srctestfolder  src/test/java/  -binjavafolder  target/classes/  -bintestfolder  target/test-classes/  -parameters  x:x  -dependencies  /tmp/jKali_Defects4J_Time_3/target/classes/:/tmp/jKali_Defects4J_Time_3/target/test-classes/:/home/wp/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Time/lib/junit-3.8.2.jar:/home/wp/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Time/lib/joda-convert-1.2.jar:/home/wp/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Time/lib/org/joda/joda-convert/1.2/joda-convert-1.2.jar:/home/wp/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Time/lib/junit/junit/3.8.2/junit-3.8.2.jar]
[INFO ] fr.inria.main.evolution.AstorMain.execute(AstorMain.java:287) - Running Astor on a JDK at /home/wp/tool/jdk1.8.0_71/jre
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:967) - Source folders: [/tmp/jKali_Defects4J_Time_3/./src/main/java]
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:986) - Source Test folders: [/tmp/jKali_Defects4J_Time_3/./src/test/java]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:707) - 
---- Creating spoon model
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initModel(AstorCoreEngine.java:806) - Creating model,  Code location from working folder: /tmp/jKali_Defects4J_Time_3/./src/main/java
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:66) - building model: /tmp/jKali_Defects4J_Time_3/./src/main/java, compliance level: 5
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:79) - Classpath (Dependencies) for building SpoonModel: [/tmp/jKali_Defects4J_Time_3/target/classes/, /tmp/jKali_Defects4J_Time_3/target/test-classes/, /home/wp/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Time/lib/junit-3.8.2.jar, /home/wp/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Time/lib/joda-convert-1.2.jar, /home/wp/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Time/lib/org/joda/joda-convert/1.2/joda-convert-1.2.jar, /home/wp/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Time/lib/junit/junit/3.8.2/junit-3.8.2.jar]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:711) - 
---- Initial suspicious size: 2128
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:127) - Total suspicious from FL: 2128,  1630
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:136) - Total ModPoint created: 1630
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:140) - Reducing Total ModPoint created to: 1000
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createInitialPopulation(ProgramVariantFactory.java:82) - Creating program variant #1, [Variant id: 1, #gens: 1000, #ops: 0, parent:-]
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - ----------------------------
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:67) - ---Configuration properties:---Execution values
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:benchmark= Defects4J
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:lastJUnitVersion= ./examples/libs/junit-4.11.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:alternativecompliancelevel= 4
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoredTestCases= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:workingDirectory= /tmp/jKali_Defects4J_Time_3/./output_astor
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:manipulatesuper= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:validation= process
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4testexecution= /home/wp/tool/jdk1.7.0_80/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:operatorspace= suppression
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:disablelog= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:binjavafolder= target/classes/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:synthesis_depth= 3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltartestpackagetoexclude= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfitnessinitialpopulation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuiteresultfolder= evosuite
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:flthreshold= 0.1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:regressionforfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:collectonlyusedmethod= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:preservelinenumbers= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax2= 50340
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax1= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probagenmutation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nomodificationconvergence= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:diff_type= relative
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:targetelementprocessor= statements
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srctestfolder= src/test/java/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forceExecuteRegression= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:clusteringfilename= clustering.csv
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:failing= org.joda.time.TestMutableDateTime_Adds
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logtestexecution= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_buggy_class= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:numberExecutions= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumbersolutions= 1000000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_affected_by_op= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:population= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:considerzerovaluesusp= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxCombinationVariableLimit= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:loglevel= INFO
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savesolution= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:javacompliancelevel= 5
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:x= x
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:uniqueoptogen= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltarpackagetonotinstrument= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectIdentifier= Time-3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:modificationpointnavigation= weight
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:stopfirst= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:multipointmodification= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:elementsToMutate= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jsonoutputname= astor_output
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoDSE= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bintestfolder= target/test-classes/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:testbystep= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:version-location= ./math-version/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:reintroduce= PARENTS:ORIGINAL
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:executorjar= ./lib/jtestex7.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxGeneration= 1000000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:max_synthesis_step= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxVarCombination= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtime= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitejar= ./lib/evosuite-master-1.0.4-SNAPSHOT.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvmversion= 1.7.0_80
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:commandTrunk= 50000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:faultlocalization= gzoltar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetmodel= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxsuspcandidates= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mode= jkali
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:learningdir= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4evosuitetestexecution= /home/wp/tool/jdk1.7.0_80/bin/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:filterfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mutationrate= 1 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pathToMVNRepository= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resourcesfolder= /src/main/resources:/src/test/resources:
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:timezone= America/Los_Angeles
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:runjava7code= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoRunOnBuggyClass= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:compiler= fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:limitbysuspicious= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logsattemps= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:dependenciespath= /tmp/jKali_Defects4J_Time_3/target/classes/:/tmp/jKali_Defects4J_Time_3/target/test-classes/:/home/wp/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Time/lib/junit-3.8.2.jar:/home/wp/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Time/lib/joda-convert-1.2.jar:/home/wp/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Time/lib/org/joda/joda-convert/1.2/joda-convert-1.2.jar:/home/wp/RepairThemAll/script/../benchmarks/defects4j/framework/projects/Time/lib/junit/junit/3.8.2/junit-3.8.2.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logpatternlayout= [%-5p] %l - %m%n
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:packageToInstrument= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfaultlocalization= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:scope= local
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:transformingredient= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:fitnessfunction= fr.inria.astor.core.solutionsearch.population.TestCaseFitnessFunction
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumvariablesperingredient= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:parsesourcefromoriginal= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pvariantfoldername= variant-
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savespoonmodelondisk= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srcjavafolder= src/main/java/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:populationcontroller= fr.inria.astor.core.solutionsearch.population.TestCaseBasedFitnessPopulationController
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoreflakyinfl= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:cleantemplates= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:applyCrossover= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxmodificationpoints= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:duplicateingredientsinspace= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:metid= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:saveall= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:seed= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savecompletepatched= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetoperations= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:processoutputinfile= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:location= .
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probabilistictransformation= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:overridemaxtime= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:outputjsonresult= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:allpoints= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bugId= 280
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitetimeout= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nrPlaceholders= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forcesubprocesskilling= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:71) - ----------------------------
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 217, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (offset == 0L) { 	return org.joda.time.DateTimeZone.UTC; }else { 	id = org.joda.time.DateTimeZone[...] ` -topatch--> `if (true) { 	return org.joda.time.DateTimeZone.UTC; }else { 	id = org.joda.time.DateTimeZone.printOf[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 217, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (offset == 0L) { 	return org.joda.time.DateTimeZone.UTC; }else { 	id = org.joda.time.DateTimeZone[...] ` -topatch--> `if (false) { 	return org.joda.time.DateTimeZone.UTC; }else { 	id = org.joda.time.DateTimeZone.printO[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 217, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (offset == 0L) { 	return org.joda.time.DateTimeZone.UTC; }else { 	id = org.joda.time.DateTimeZone[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 220, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `id = org.joda.time.DateTimeZone.printOffset(offset) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 221, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return org.joda.time.DateTimeZone.fixedOffsetZone(id, offset) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 695, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((org.joda.time.DateTimeZone.cOffsetFormatter) == null) { 	org.joda.time.DateTimeZone.cOffsetForm[...] ` -topatch--> `if (true) { 	org.joda.time.DateTimeZone.cOffsetFormatter = new org.joda.time.format.DateTimeFormatte[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 695, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((org.joda.time.DateTimeZone.cOffsetFormatter) == null) { 	org.joda.time.DateTimeZone.cOffsetForm[...] ` -topatch--> `if (false) { 	org.joda.time.DateTimeZone.cOffsetFormatter = new org.joda.time.format.DateTimeFormatt[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 695, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((org.joda.time.DateTimeZone.cOffsetFormatter) == null) { 	org.joda.time.DateTimeZone.cOffsetForm[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 696, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `org.joda.time.DateTimeZone.cOffsetFormatter = new org.joda.time.format.DateTimeFormatterBuilder().ap[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 377, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (offset == 0) { 	return org.joda.time.DateTimeZone.UTC; } ` -topatch--> `if (true) { 	return org.joda.time.DateTimeZone.UTC; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 377, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (offset == 0) { 	return org.joda.time.DateTimeZone.UTC; } ` -topatch--> `if (false) { 	return org.joda.time.DateTimeZone.UTC; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 377, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (offset == 0) { 	return org.joda.time.DateTimeZone.UTC; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 380, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((org.joda.time.DateTimeZone.iFixedOffsetCache) == null) { 	org.joda.time.DateTimeZone.iFixedOffs[...] ` -topatch--> `if (true) { 	org.joda.time.DateTimeZone.iFixedOffsetCache = new java.util.HashMap<java.lang.String, [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 380, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((org.joda.time.DateTimeZone.iFixedOffsetCache) == null) { 	org.joda.time.DateTimeZone.iFixedOffs[...] ` -topatch--> `if (false) { 	org.joda.time.DateTimeZone.iFixedOffsetCache = new java.util.HashMap<java.lang.String,[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 380, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((org.joda.time.DateTimeZone.iFixedOffsetCache) == null) { 	org.joda.time.DateTimeZone.iFixedOffs[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 381, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `org.joda.time.DateTimeZone.iFixedOffsetCache = new java.util.HashMap<java.lang.String, java.lang.ref[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 385, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (ref != null) { 	zone = ref.get(); 	if (zone != null) { 		return zone; 	} } ` -topatch--> `if (true) { 	zone = ref.get(); 	if (zone != null) { 		return zone; 	} }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 385, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (ref != null) { 	zone = ref.get(); 	if (zone != null) { 		return zone; 	} } ` -topatch--> `if (false) { 	zone = ref.get(); 	if (zone != null) { 		return zone; 	} }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 385, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (ref != null) { 	zone = ref.get(); 	if (zone != null) { 		return zone; 	} } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 391, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `zone = new org.joda.time.tz.FixedDateTimeZone(id, null, offset, offset) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 392, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.joda.time.DateTimeZone.iFixedOffsetCache.put(id, new java.lang.ref.SoftReference<org.joda.time.D[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 658, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `buf.append('+') ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 657, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (offset >= 0) { 	buf.append('+'); }else { 	buf.append('-'); 	offset = -offset; } ` -topatch--> `if (true) { 	buf.append('+'); }else { 	buf.append('-'); 	offset = -offset; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 657, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (offset >= 0) { 	buf.append('+'); }else { 	buf.append('-'); 	offset = -offset; } ` -topatch--> `if (false) { 	buf.append('+'); }else { 	buf.append('-'); 	offset = -offset; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 657, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (offset >= 0) { 	buf.append('+'); }else { 	buf.append('-'); 	offset = -offset; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 665, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.joda.time.format.FormatUtils.appendPaddedInteger(buf, hours, 2) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 666, pointed element: CtOperatorAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `offset -= hours * ((int) (org.joda.time.DateTimeConstants.MILLIS_PER_HOUR)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 669, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `buf.append(':') ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 670, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.joda.time.format.FormatUtils.appendPaddedInteger(buf, minutes, 2) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 671, pointed element: CtOperatorAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `offset -= minutes * (org.joda.time.DateTimeConstants.MILLIS_PER_MINUTE) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 672, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (offset == 0) { 	return buf.toString(); } ` -topatch--> `if (true) { 	return buf.toString(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 672, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (offset == 0) { 	return buf.toString(); } ` -topatch--> `if (false) { 	return buf.toString(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 672, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (offset == 0) { 	return buf.toString(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeParserBucket line: 195, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `iSavedState = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeParserBucket line: 196, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `iOffset = offset ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeParserBucket line: 381, pointed element: CtOperatorAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `millis -= iOffset ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatter line: 758, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return bucket.computeMillis(true, text) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatter line: 757, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (newPos >= (text.length())) { 	return bucket.computeMillis(true, text); } ` -topatch--> `if (true) { 	return bucket.computeMillis(true, text); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatter line: 757, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (newPos >= (text.length())) { 	return bucket.computeMillis(true, text); } ` -topatch--> `if (false) { 	return bucket.computeMillis(true, text); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatter line: 757, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (newPos >= (text.length())) { 	return bucket.computeMillis(true, text); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatter line: 953, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `chrono = iChrono ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatter line: 756, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (newPos >= 0) { 	if (newPos >= (text.length())) { 		return bucket.computeMillis(true, text); 	} }[...] ` -topatch--> `if (true) { 	if (newPos >= (text.length())) { 		return bucket.computeMillis(true, text); 	} }else { [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatter line: 756, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (newPos >= 0) { 	if (newPos >= (text.length())) { 		return bucket.computeMillis(true, text); 	} }[...] ` -topatch--> `if (false) { 	if (newPos >= (text.length())) { 		return bucket.computeMillis(true, text); 	} }else {[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatter line: 756, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (newPos >= 0) { 	if (newPos >= (text.length())) { 		return bucket.computeMillis(true, text); 	} }[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.MutableDateTime line: 785, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setMillis(getChronology().hours().add(getMillis(), hours)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatter line: 266, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((iChrono) == chrono) { 	return this; } ` -topatch--> `if (true) { 	return this; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatter line: 266, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((iChrono) == chrono) { 	return this; } ` -topatch--> `if (false) { 	return this; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatter line: 266, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((iChrono) == chrono) { 	return this; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeParserBucket line: 369, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < count; i++) { 	millis = savedFields[i].set(millis, (i == (count - 1))); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeParserBucket line: 347, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (iSavedFieldsShared) { 	iSavedFields = savedFields = ((org.joda.time.format.DateTimeParserBucket.[...] ` -topatch--> `if (true) { 	this.iSavedFields = savedFields = ((org.joda.time.format.DateTimeParserBucket.SavedFiel[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeParserBucket line: 347, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (iSavedFieldsShared) { 	iSavedFields = savedFields = ((org.joda.time.format.DateTimeParserBucket.[...] ` -topatch--> `if (false) { 	this.iSavedFields = savedFields = ((org.joda.time.format.DateTimeParserBucket.SavedFie[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeParserBucket line: 347, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (iSavedFieldsShared) { 	iSavedFields = savedFields = ((org.joda.time.format.DateTimeParserBucket.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeParserBucket line: 351, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.joda.time.format.DateTimeParserBucket.sort(savedFields, count) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeParserBucket line: 352, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (count > 0) {  	org.joda.time.DurationField months = org.joda.time.DurationFieldType.months().get[...] ` -topatch--> `if (true) {  	org.joda.time.DurationField months = org.joda.time.DurationFieldType.months().getField[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeParserBucket line: 352, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (count > 0) {  	org.joda.time.DurationField months = org.joda.time.DurationFieldType.months().get[...] ` -topatch--> `if (false) {  	org.joda.time.DurationField months = org.joda.time.DurationFieldType.months().getFiel[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeParserBucket line: 352, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (count > 0) {  	org.joda.time.DurationField months = org.joda.time.DurationFieldType.months().get[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeParserBucket line: 365, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < count; i++) { 	millis = savedFields[i].set(millis, resetFields); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeParserBucket line: 368, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (resetFields) { 	for (int i = 0; i < count; i++) { 		millis = savedFields[i].set(millis, (i == (c[...] ` -topatch--> `if (true) { 	for (int i = 0; i < count; i++) { 		millis = savedFields[i].set(millis, (i == (count - [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeParserBucket line: 368, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (resetFields) { 	for (int i = 0; i < count; i++) { 		millis = savedFields[i].set(millis, (i == (c[...] ` -topatch--> `if (false) { 	for (int i = 0; i < count; i++) { 		millis = savedFields[i].set(millis, (i == (count -[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeParserBucket line: 368, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (resetFields) { 	for (int i = 0; i < count; i++) { 		millis = savedFields[i].set(millis, (i == (c[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeParserBucket line: 380, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((iOffset) != null) { 	millis -= iOffset; }else 	if ((iZone) != null) { 		int offset = iZone.getO[...] ` -topatch--> `if (true) { 	millis -= this.iOffset; }else 	if ((this.iZone) != null) { 		int offset = this.iZone.ge[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeParserBucket line: 380, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((iOffset) != null) { 	millis -= iOffset; }else 	if ((iZone) != null) { 		int offset = iZone.getO[...] ` -topatch--> `if (false) { 	millis -= this.iOffset; }else 	if ((this.iZone) != null) { 		int offset = this.iZone.g[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeParserBucket line: 380, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((iOffset) != null) { 	millis -= iOffset; }else 	if ((iZone) != null) { 		int offset = iZone.getO[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.FormatUtils line: 64, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `buf.append('0') ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.FormatUtils line: 63, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (; size > 1; size--) { 	buf.append('0'); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.FormatUtils line: 66, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `buf.append(((char) (value + '0'))) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeParserBucket line: 121, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `chrono = org.joda.time.DateTimeUtils.getChronology(chrono) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeParserBucket line: 122, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `iMillis = instantLocal ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeParserBucket line: 123, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `iZone = chrono.getZone() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeParserBucket line: 124, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `iChrono = chrono.withUTC() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeParserBucket line: 125, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `iLocale = (locale == null) ? java.util.Locale.getDefault() : locale ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeParserBucket line: 126, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `iPivotYear = pivotYear ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeParserBucket line: 127, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `iDefaultYear = defaultYear ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatter line: 937, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (parser == null) { 	throw new java.lang.UnsupportedOperationException("Parsing not supported"); } ` -topatch--> `if (true) { 	throw new java.lang.UnsupportedOperationException("Parsing not supported"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatter line: 937, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (parser == null) { 	throw new java.lang.UnsupportedOperationException("Parsing not supported"); } ` -topatch--> `if (false) { 	throw new java.lang.UnsupportedOperationException("Parsing not supported"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatter line: 937, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (parser == null) { 	throw new java.lang.UnsupportedOperationException("Parsing not supported"); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.FormatUtils line: 50, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (value < 0) { 	buf.append('-'); 	if (value != (java.lang.Integer.MIN_VALUE)) { 		value = -value; [...] ` -topatch--> `if (true) { 	buf.append('-'); 	if (value != (java.lang.Integer.MIN_VALUE)) { 		value = -value; 	}els[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.FormatUtils line: 50, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (value < 0) { 	buf.append('-'); 	if (value != (java.lang.Integer.MIN_VALUE)) { 		value = -value; [...] ` -topatch--> `if (false) { 	buf.append('-'); 	if (value != (java.lang.Integer.MIN_VALUE)) { 		value = -value; 	}el[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.FormatUtils line: 50, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (value < 0) { 	buf.append('-'); 	if (value != (java.lang.Integer.MIN_VALUE)) { 		value = -value; [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.FormatUtils line: 62, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (value < 10) { 	for (; size > 1; size--) { 		buf.append('0'); 	} 	buf.append(((char) (value + '0'[...] ` -topatch--> `if (true) { 	for (; size > 1; size--) { 		buf.append('0'); 	} 	buf.append(((char) (value + '0'))); }[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.FormatUtils line: 62, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (value < 10) { 	for (; size > 1; size--) { 		buf.append('0'); 	} 	buf.append(((char) (value + '0'[...] ` -topatch--> `if (false) { 	for (; size > 1; size--) { 		buf.append('0'); 	} 	buf.append(((char) (value + '0'))); [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.FormatUtils line: 62, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (value < 10) { 	for (; size > 1; size--) { 		buf.append('0'); 	} 	buf.append(((char) (value + '0'[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatter line: 951, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `chrono = org.joda.time.DateTimeUtils.getChronology(chrono) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatter line: 952, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((iChrono) != null) { 	chrono = iChrono; } ` -topatch--> `if (true) { 	chrono = this.iChrono; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatter line: 952, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((iChrono) != null) { 	chrono = iChrono; } ` -topatch--> `if (false) { 	chrono = this.iChrono; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatter line: 952, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((iChrono) != null) { 	chrono = iChrono; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatter line: 955, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((iZone) != null) { 	chrono = chrono.withZone(iZone); } ` -topatch--> `if (true) { 	chrono = chrono.withZone(this.iZone); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatter line: 955, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((iZone) != null) { 	chrono = chrono.withZone(iZone); } ` -topatch--> `if (false) { 	chrono = chrono.withZone(this.iZone); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatter line: 955, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((iZone) != null) { 	chrono = chrono.withZone(iZone); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.base.BaseDateTime line: 61, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(org.joda.time.DateTimeUtils.currentTimeMillis(), org.joda.time.chrono.ISOChronology.getInstance[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 215, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((id.startsWith("+")) || (id.startsWith("-"))) { 	int offset = org.joda.time.DateTimeZone.parseOf[...] ` -topatch--> `if (true) { 	int offset = org.joda.time.DateTimeZone.parseOffset(id); 	if (offset == 0L) { 		return [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 215, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((id.startsWith("+")) || (id.startsWith("-"))) { 	int offset = org.joda.time.DateTimeZone.parseOf[...] ` -topatch--> `if (false) { 	int offset = org.joda.time.DateTimeZone.parseOffset(id); 	if (offset == 0L) { 		return[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 215, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((id.startsWith("+")) || (id.startsWith("-"))) { 	int offset = org.joda.time.DateTimeZone.parseOf[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 141, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 931, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return offsetPrev ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeUtils line: 50, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `map.put("UT", org.joda.time.DateTimeZone.UTC) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeUtils line: 51, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `map.put("UTC", org.joda.time.DateTimeZone.UTC) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeUtils line: 52, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `map.put("GMT", org.joda.time.DateTimeZone.UTC) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeUtils line: 53, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.joda.time.DateTimeUtils.put(map, "EST", "America/New_York") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeUtils line: 54, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.joda.time.DateTimeUtils.put(map, "EDT", "America/New_York") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeUtils line: 55, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.joda.time.DateTimeUtils.put(map, "CST", "America/Chicago") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeUtils line: 56, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.joda.time.DateTimeUtils.put(map, "CDT", "America/Chicago") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeUtils line: 57, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.joda.time.DateTimeUtils.put(map, "MST", "America/Denver") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeUtils line: 58, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.joda.time.DateTimeUtils.put(map, "MDT", "America/Denver") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeUtils line: 59, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.joda.time.DateTimeUtils.put(map, "PST", "America/Los_Angeles") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeUtils line: 60, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.joda.time.DateTimeUtils.put(map, "PDT", "America/Los_Angeles") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeUtils line: 61, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `org.joda.time.DateTimeUtils.cZoneNames = java.util.Collections.unmodifiableMap(map) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeUtils line: 65, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `map.put(name, org.joda.time.DateTimeZone.forID(id)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 213, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return zone ` -topatch--> `-` (null) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 1169, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return true ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 1179, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return true ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 205, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (id == null) { 	return org.joda.time.DateTimeZone.getDefault(); } ` -topatch--> `if (true) { 	return org.joda.time.DateTimeZone.getDefault(); }` (spoon.support.reflect.code.CtIfImpl) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 205, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (id == null) { 	return org.joda.time.DateTimeZone.getDefault(); } ` -topatch--> `if (false) { 	return org.joda.time.DateTimeZone.getDefault(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 205, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (id == null) { 	return org.joda.time.DateTimeZone.getDefault(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 208, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (id.equals("UTC")) { 	return org.joda.time.DateTimeZone.UTC; } ` -topatch--> `if (true) { 	return org.joda.time.DateTimeZone.UTC; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 208, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (id.equals("UTC")) { 	return org.joda.time.DateTimeZone.UTC; } ` -topatch--> `if (false) { 	return org.joda.time.DateTimeZone.UTC; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 208, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (id.equals("UTC")) { 	return org.joda.time.DateTimeZone.UTC; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 212, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (zone != null) { 	return zone; } ` -topatch--> `if (true) { 	return zone; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 212, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (zone != null) { 	return zone; } ` -topatch--> `if (false) { 	return zone; }` (spoon.support.reflect.code.CtIfImpl) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 212, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (zone != null) { 	return zone; } ` -topatch--> `-` (null) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 146, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return loadZoneData(id) ` -topatch--> `-` (null) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 225, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `in = openResource(id) ` -topatch--> `-` (null) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 227, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `iZoneInfoMap.put(id, new java.lang.ref.SoftReference<org.joda.time.DateTimeZone>(tz)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 228, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return tz ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 235, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (in != null) { 	in.close(); } ` -topatch--> `if (true) { 	in.close(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 235, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (in != null) { 	in.close(); } ` -topatch--> `if (false) { 	in.close(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 235, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (in != null) { 	in.close(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 236, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `in.close() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.DateTimeZoneBuilder line: 95, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (in instanceof java.io.DataInput) { 	return org.joda.time.tz.DateTimeZoneBuilder.readFrom(((java.[...] ` -topatch--> `if (true) { 	return org.joda.time.tz.DateTimeZoneBuilder.readFrom(((java.io.DataInput) (in)), id); }[...]` (spoon.support.reflect.code.CtIfImpl) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.DateTimeZoneBuilder line: 95, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (in instanceof java.io.DataInput) { 	return org.joda.time.tz.DateTimeZoneBuilder.readFrom(((java.[...] ` -topatch--> `if (false) { 	return org.joda.time.tz.DateTimeZoneBuilder.readFrom(((java.io.DataInput) (in)), id); [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.DateTimeZoneBuilder line: 95, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (in instanceof java.io.DataInput) { 	return org.joda.time.tz.DateTimeZoneBuilder.readFrom(((java.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.DateTimeZoneBuilder line: 98, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return org.joda.time.tz.DateTimeZoneBuilder.readFrom(((java.io.DataInput) (new java.io.DataInputStre[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.DateTimeZoneBuilder line: 110, pointed element: CtSwitchImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSwitchImpl) `switch (in.readUnsignedByte()) { 	case 'F' : 		org.joda.time.DateTimeZone fixed = new org.joda.time.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.DateTimeZoneBuilder line: 184, pointed element: CtSwitchImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSwitchImpl) `switch (v >> 6) { 	case 0 : 	default :  		v = (v << (32 - 6)) >> (32 - 6); 		return v * (30 * 60000L[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.CachedDateTimeZone line: 88, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `iZone = zone ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.CachedDateTimeZone line: 39, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `i = java.lang.Integer.getInteger("org.joda.time.tz.CachedDateTimeZone.size") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.CachedDateTimeZone line: 45, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (i == null) {   	cacheSize = 512; }else { 	cacheSize = i.intValue();  	cacheSize--; 	int shift = [...] ` -topatch--> `if (true) {   	cacheSize = 512; }else { 	cacheSize = i.intValue();  	cacheSize--; 	int shift = 0; 	w[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.CachedDateTimeZone line: 45, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (i == null) {   	cacheSize = 512; }else { 	cacheSize = i.intValue();  	cacheSize--; 	int shift = [...] ` -topatch--> `if (false) {   	cacheSize = 512; }else { 	cacheSize = i.intValue();  	cacheSize--; 	int shift = 0; 	[...]` (spoon.support.reflect.code.CtIfImpl) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.CachedDateTimeZone line: 45, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (i == null) {   	cacheSize = 512; }else { 	cacheSize = i.intValue();  	cacheSize--; 	int shift = [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.CachedDateTimeZone line: 48, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `cacheSize = 512 ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.CachedDateTimeZone line: 61, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `cInfoCacheMask = cacheSize - 1 ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.CachedDateTimeZone line: 68, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (zone instanceof org.joda.time.tz.CachedDateTimeZone) { 	return ((org.joda.time.tz.CachedDateTime[...] ` -topatch--> `if (true) { 	return ((org.joda.time.tz.CachedDateTimeZone) (zone)); }` (spoon.support.reflect.code.CtIfImpl) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.CachedDateTimeZone line: 68, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (zone instanceof org.joda.time.tz.CachedDateTimeZone) { 	return ((org.joda.time.tz.CachedDateTime[...] ` -topatch--> `if (false) { 	return ((org.joda.time.tz.CachedDateTimeZone) (zone)); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.CachedDateTimeZone line: 68, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (zone instanceof org.joda.time.tz.CachedDateTimeZone) { 	return ((org.joda.time.tz.CachedDateTime[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:185) - The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:187) - Killed the Process that runs JUnit test cases 80951
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 715, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (id == null) { 	throw new java.lang.IllegalArgumentException("Id must not be null"); } ` -topatch--> `if (true) { 	throw new java.lang.IllegalArgumentException("Id must not be null"); }` (spoon.support.reflect.code.CtIfImpl) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 715, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (id == null) { 	throw new java.lang.IllegalArgumentException("Id must not be null"); } ` -topatch--> `if (false) { 	throw new java.lang.IllegalArgumentException("Id must not be null"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 715, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (id == null) { 	throw new java.lang.IllegalArgumentException("Id must not be null"); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 718, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `iID = id ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 116, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.joda.time.DateTimeZone.setProvider0(null) ` -topatch--> `-` (null) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 117, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.joda.time.DateTimeZone.setNameProvider0(null) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 443, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (provider == null) { 	provider = org.joda.time.DateTimeZone.getDefaultProvider(); } ` -topatch--> `if (true) { 	provider = org.joda.time.DateTimeZone.getDefaultProvider(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 443, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (provider == null) { 	provider = org.joda.time.DateTimeZone.getDefaultProvider(); } ` -topatch--> `if (false) { 	provider = org.joda.time.DateTimeZone.getDefaultProvider(); }` (spoon.support.reflect.code.CtIfImpl) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 443, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (provider == null) { 	provider = org.joda.time.DateTimeZone.getDefaultProvider(); } ` -topatch--> `-` (null) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 444, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `provider = org.joda.time.DateTimeZone.getDefaultProvider() ` -topatch--> `-` (null) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 447, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((ids == null) || ((ids.size()) == 0)) { 	throw new java.lang.IllegalArgumentException( 	"The pro[...] ` -topatch--> `if (true) { 	throw new java.lang.IllegalArgumentException( 	"The provider doesn't have any available[...]` (spoon.support.reflect.code.CtIfImpl) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 447, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((ids == null) || ((ids.size()) == 0)) { 	throw new java.lang.IllegalArgumentException( 	"The pro[...] ` -topatch--> `if (false) { 	throw new java.lang.IllegalArgumentException( 	"The provider doesn't have any availabl[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 447, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((ids == null) || ((ids.size()) == 0)) { 	throw new java.lang.IllegalArgumentException( 	"The pro[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 451, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(ids.contains("UTC"))) { 	throw new java.lang.IllegalArgumentException("The provider doesn't su[...] ` -topatch--> `if (true) { 	throw new java.lang.IllegalArgumentException("The provider doesn't support UTC"); }` (spoon.support.reflect.code.CtIfImpl) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 451, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(ids.contains("UTC"))) { 	throw new java.lang.IllegalArgumentException("The provider doesn't su[...] ` -topatch--> `if (false) { 	throw new java.lang.IllegalArgumentException("The provider doesn't support UTC"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 451, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(ids.contains("UTC"))) { 	throw new java.lang.IllegalArgumentException("The provider doesn't su[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 454, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(org.joda.time.DateTimeZone.UTC.equals(provider.getZone("UTC")))) { 	throw new java.lang.Illega[...] ` -topatch--> `if (true) { 	throw new java.lang.IllegalArgumentException("Invalid UTC zone provided"); }` (spoon.support.reflect.code.CtIfImpl) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 454, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(org.joda.time.DateTimeZone.UTC.equals(provider.getZone("UTC")))) { 	throw new java.lang.Illega[...] ` -topatch--> `if (false) { 	throw new java.lang.IllegalArgumentException("Invalid UTC zone provided"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 454, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(org.joda.time.DateTimeZone.UTC.equals(provider.getZone("UTC")))) { 	throw new java.lang.Illega[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 457, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `org.joda.time.DateTimeZone.cProvider = provider ` -topatch--> `-` (null) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 458, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `org.joda.time.DateTimeZone.cAvailableIDs = ids ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 475, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (providerClass != null) { 	try { 		provider = ((org.joda.time.tz.Provider) (java.lang.Class.forNa[...] ` -topatch--> `if (true) { 	try { 		provider = ((org.joda.time.tz.Provider) (java.lang.Class.forName(providerClass)[...]` (spoon.support.reflect.code.CtIfImpl) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 475, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (providerClass != null) { 	try { 		provider = ((org.joda.time.tz.Provider) (java.lang.Class.forNa[...] ` -topatch--> `if (false) { 	try { 		provider = ((org.joda.time.tz.Provider) (java.lang.Class.forName(providerClass[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 475, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (providerClass != null) { 	try { 		provider = ((org.joda.time.tz.Provider) (java.lang.Class.forNa[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 486, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (provider == null) { 	try { 		provider = new org.joda.time.tz.ZoneInfoProvider("org/joda/time/tz/[...] ` -topatch--> `if (true) { 	try { 		provider = new org.joda.time.tz.ZoneInfoProvider("org/joda/time/tz/data"); 	} c[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 486, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (provider == null) { 	try { 		provider = new org.joda.time.tz.ZoneInfoProvider("org/joda/time/tz/[...] ` -topatch--> `if (false) { 	try { 		provider = new org.joda.time.tz.ZoneInfoProvider("org/joda/time/tz/data"); 	} [...]` (spoon.support.reflect.code.CtIfImpl) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 486, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (provider == null) { 	try { 		provider = new org.joda.time.tz.ZoneInfoProvider("org/joda/time/tz/[...] ` -topatch--> `-` (null) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 488, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `provider = new org.joda.time.tz.ZoneInfoProvider("org/joda/time/tz/data") ` -topatch--> `-` (null) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 494, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (provider == null) { 	provider = new org.joda.time.tz.UTCProvider(); } ` -topatch--> `if (true) { 	provider = new org.joda.time.tz.UTCProvider(); }` (spoon.support.reflect.code.CtIfImpl) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 494, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (provider == null) { 	provider = new org.joda.time.tz.UTCProvider(); } ` -topatch--> `if (false) { 	provider = new org.joda.time.tz.UTCProvider(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 494, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (provider == null) { 	provider = new org.joda.time.tz.UTCProvider(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 539, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (nameProvider == null) { 	nameProvider = org.joda.time.DateTimeZone.getDefaultNameProvider(); } ` -topatch--> `if (true) { 	nameProvider = org.joda.time.DateTimeZone.getDefaultNameProvider(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 539, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (nameProvider == null) { 	nameProvider = org.joda.time.DateTimeZone.getDefaultNameProvider(); } ` -topatch--> `if (false) { 	nameProvider = org.joda.time.DateTimeZone.getDefaultNameProvider(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 539, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (nameProvider == null) { 	nameProvider = org.joda.time.DateTimeZone.getDefaultNameProvider(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 540, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `nameProvider = org.joda.time.DateTimeZone.getDefaultNameProvider() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 542, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `org.joda.time.DateTimeZone.cNameProvider = nameProvider ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 557, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (providerClass != null) { 	try { 		nameProvider = ((org.joda.time.tz.NameProvider) (java.lang.Cla[...] ` -topatch--> `if (true) { 	try { 		nameProvider = ((org.joda.time.tz.NameProvider) (java.lang.Class.forName(provid[...]` (spoon.support.reflect.code.CtIfImpl) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 557, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (providerClass != null) { 	try { 		nameProvider = ((org.joda.time.tz.NameProvider) (java.lang.Cla[...] ` -topatch--> `if (false) { 	try { 		nameProvider = ((org.joda.time.tz.NameProvider) (java.lang.Class.forName(provi[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 557, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (providerClass != null) { 	try { 		nameProvider = ((org.joda.time.tz.NameProvider) (java.lang.Cla[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 568, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (nameProvider == null) { 	nameProvider = new org.joda.time.tz.DefaultNameProvider(); } ` -topatch--> `if (true) { 	nameProvider = new org.joda.time.tz.DefaultNameProvider(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 568, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (nameProvider == null) { 	nameProvider = new org.joda.time.tz.DefaultNameProvider(); } ` -topatch--> `if (false) { 	nameProvider = new org.joda.time.tz.DefaultNameProvider(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 568, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (nameProvider == null) { 	nameProvider = new org.joda.time.tz.DefaultNameProvider(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 569, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `nameProvider = new org.joda.time.tz.DefaultNameProvider() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.FixedDateTimeZone line: 39, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `iNameKey = nameKey ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.FixedDateTimeZone line: 40, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `iWallOffset = wallOffset ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.FixedDateTimeZone line: 41, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `iStandardOffset = standardOffset ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.FixedDateTimeZone line: 88, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((this) == obj) { 	return true; } ` -topatch--> `if (true) { 	return true; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.FixedDateTimeZone line: 88, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((this) == obj) { 	return true; } ` -topatch--> `if (false) { 	return true; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.FixedDateTimeZone line: 88, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((this) == obj) { 	return true; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.FixedDateTimeZone line: 89, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return true ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 82, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(resourcePath, null, false) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 107, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (resourcePath == null) { 	throw new java.lang.IllegalArgumentException("No resource path provided[...] ` -topatch--> `if (true) { 	throw new java.lang.IllegalArgumentException("No resource path provided"); }` (spoon.support.reflect.code.CtIfImpl) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 107, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (resourcePath == null) { 	throw new java.lang.IllegalArgumentException("No resource path provided[...] ` -topatch--> `if (false) { 	throw new java.lang.IllegalArgumentException("No resource path provided"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 107, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (resourcePath == null) { 	throw new java.lang.IllegalArgumentException("No resource path provided[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 110, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(resourcePath.endsWith("/"))) { 	resourcePath += '/'; } ` -topatch--> `if (true) { 	resourcePath += '/'; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 110, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!(resourcePath.endsWith("/"))) { 	resourcePath += '/'; } ` -topatch--> `if (false) { 	resourcePath += '/'; }` (spoon.support.reflect.code.CtIfImpl) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 110, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!(resourcePath.endsWith("/"))) { 	resourcePath += '/'; } ` -topatch--> `-` (null) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 111, pointed element: CtOperatorAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `resourcePath += '/' ` -topatch--> `-` (null) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 114, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `iFileDir = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 115, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `iResourcePath = resourcePath ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 117, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((loader == null) && (!favorSystemLoader)) { 	loader = getClass().getClassLoader(); } ` -topatch--> `if (true) { 	loader = getClass().getClassLoader(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 117, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((loader == null) && (!favorSystemLoader)) { 	loader = getClass().getClassLoader(); } ` -topatch--> `if (false) { 	loader = getClass().getClassLoader(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 117, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((loader == null) && (!favorSystemLoader)) { 	loader = getClass().getClassLoader(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 118, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `loader = getClass().getClassLoader() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 121, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `iLoader = loader ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 123, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `iZoneInfoMap = org.joda.time.tz.ZoneInfoProvider.loadZoneInfoMap(openResource("ZoneInfoMap")) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 135, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (id == null) { 	return null; } ` -topatch--> `if (true) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 135, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (id == null) { 	return null; } ` -topatch--> `if (false) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 135, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (id == null) { 	return null; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 140, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (obj == null) { 	return null; } ` -topatch--> `if (true) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 140, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (obj == null) { 	return null; } ` -topatch--> `if (false) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 140, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (obj == null) { 	return null; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 144, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (id.equals(obj)) {  	return loadZoneData(id); } ` -topatch--> `if (true) {  	return loadZoneData(id); }` (spoon.support.reflect.code.CtIfImpl) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 144, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (id.equals(obj)) {  	return loadZoneData(id); } ` -topatch--> `if (false) {  	return loadZoneData(id); }` (spoon.support.reflect.code.CtIfImpl) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 144, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (id.equals(obj)) {  	return loadZoneData(id); } ` -topatch--> `-` (null) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 149, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof java.lang.ref.SoftReference<?>) { 	@java.lang.SuppressWarnings("unchecked") 	java[...] ` -topatch--> `if (true) { 	@java.lang.SuppressWarnings("unchecked") 	java.lang.ref.SoftReference<org.joda.time.Dat[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 149, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof java.lang.ref.SoftReference<?>) { 	@java.lang.SuppressWarnings("unchecked") 	java[...] ` -topatch--> `if (false) { 	@java.lang.SuppressWarnings("unchecked") 	java.lang.ref.SoftReference<org.joda.time.Da[...]` (spoon.support.reflect.code.CtIfImpl) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 149, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof java.lang.ref.SoftReference<?>) { 	@java.lang.SuppressWarnings("unchecked") 	java[...] ` -topatch--> `-` (null) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 153, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tz != null) { 	return tz; } ` -topatch--> `if (true) { 	return tz; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 153, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tz != null) { 	return tz; } ` -topatch--> `if (false) { 	return tz; }` (spoon.support.reflect.code.CtIfImpl) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 153, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (tz != null) { 	return tz; } ` -topatch--> `-` (null) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 154, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return tz ` -topatch--> `-` (null) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 195, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((iFileDir) != null) { 	in = new java.io.FileInputStream(new java.io.File(iFileDir, name)); }else[...] ` -topatch--> `if (true) { 	in = new java.io.FileInputStream(new java.io.File(this.iFileDir, name)); }else { 	java.[...]` (spoon.support.reflect.code.CtIfImpl) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 195, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((iFileDir) != null) { 	in = new java.io.FileInputStream(new java.io.File(iFileDir, name)); }else[...] ` -topatch--> `if (false) { 	in = new java.io.FileInputStream(new java.io.File(this.iFileDir, name)); }else { 	java[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 195, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((iFileDir) != null) { 	in = new java.io.FileInputStream(new java.io.File(iFileDir, name)); }else[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 199, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((iLoader) != null) { 	in = iLoader.getResourceAsStream(path); }else { 	in = java.lang.ClassLoade[...] ` -topatch--> `if (true) { 	in = this.iLoader.getResourceAsStream(path); }else { 	in = java.lang.ClassLoader.getSys[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 199, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((iLoader) != null) { 	in = iLoader.getResourceAsStream(path); }else { 	in = java.lang.ClassLoade[...] ` -topatch--> `if (false) { 	in = this.iLoader.getResourceAsStream(path); }else { 	in = java.lang.ClassLoader.getSy[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 199, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((iLoader) != null) { 	in = iLoader.getResourceAsStream(path); }else { 	in = java.lang.ClassLoade[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 200, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `in = iLoader.getResourceAsStream(path) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (in == null) { 	java.lang.StringBuilder buf = new java.lang.StringBuilder(40).append( 	"Resource [...] ` -topatch--> `if (true) { 	java.lang.StringBuilder buf = new java.lang.StringBuilder(40).append( 	"Resource not fo[...]` (spoon.support.reflect.code.CtIfImpl) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (in == null) { 	java.lang.StringBuilder buf = new java.lang.StringBuilder(40).append( 	"Resource [...] ` -topatch--> `if (false) { 	java.lang.StringBuilder buf = new java.lang.StringBuilder(40).append( 	"Resource not f[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (in == null) { 	java.lang.StringBuilder buf = new java.lang.StringBuilder(40).append( 	"Resource [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 254, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.joda.time.tz.ZoneInfoProvider.readZoneInfoMap(din, map) ` -topatch--> `-` (null) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 257, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `din.close() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 261, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `map.put("UTC", new java.lang.ref.SoftReference<org.joda.time.DateTimeZone>(org.joda.time.DateTimeZon[...] ` -topatch--> `-` (null) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 275, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < size; i++) { 	pool[i] = din.readUTF().intern(); } ` -topatch--> `-` (null) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 276, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `pool[i] = din.readUTF().intern() ` -topatch--> `-` (null) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 280, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `size = din.readUnsignedShort() ` -topatch--> `-` (null) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 281, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < size; i++) { 	try { 		zimap.put(pool[din.readUnsignedShort()], pool[din.readUnsi[...] ` -topatch--> `-` (null) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.tz.ZoneInfoProvider line: 283, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `zimap.put(pool[din.readUnsignedShort()], pool[din.readUnsignedShort()]) ` -topatch--> `-` (null) 
[ERROR] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:300) - Error reading the validation process
 output: 
America/Los_Angeles
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 1145, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (printer != null) { 	if ((printer == parser) || (parser == null)) { 		f = printer; 	} }else { 	f [...] ` -topatch--> `if (true) { 	if ((printer == parser) || (parser == null)) { 		f = printer; 	} }else { 	f = parser; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 1145, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (printer != null) { 	if ((printer == parser) || (parser == null)) { 		f = printer; 	} }else { 	f [...] ` -topatch--> `if (false) { 	if ((printer == parser) || (parser == null)) { 		f = printer; 	} }else { 	f = parser; [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 1145, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (printer != null) { 	if ((printer == parser) || (parser == null)) { 		f = printer; 	} }else { 	f [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 1146, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((printer == parser) || (parser == null)) { 	f = printer; } ` -topatch--> `if (true) { 	f = printer; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 1146, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((printer == parser) || (parser == null)) { 	f = printer; } ` -topatch--> `if (false) { 	f = printer; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 1146, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((printer == parser) || (parser == null)) { 	f = printer; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 1147, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `f = printer ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatter line: 138, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `iPrinter = printer ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatter line: 139, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `iParser = parser ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatter line: 140, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `iLocale = locale ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatter line: 141, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `iOffsetParsed = offsetParsed ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatter line: 142, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `iChrono = chrono ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatter line: 143, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `iZone = zone ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatter line: 144, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `iPivotYear = pivotYear ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatter line: 145, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `iDefaultYear = defaultYear ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 112, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `parser = ((org.joda.time.format.DateTimeParser) (f)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 108, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `printer = ((org.joda.time.format.DateTimePrinter) (f)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 107, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (isPrinter(f)) { 	printer = ((org.joda.time.format.DateTimePrinter) (f)); } ` -topatch--> `if (true) { 	printer = ((org.joda.time.format.DateTimePrinter) (f)); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 107, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (isPrinter(f)) { 	printer = ((org.joda.time.format.DateTimePrinter) (f)); } ` -topatch--> `if (false) { 	printer = ((org.joda.time.format.DateTimePrinter) (f)); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 107, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (isPrinter(f)) { 	printer = ((org.joda.time.format.DateTimePrinter) (f)); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 111, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (isParser(f)) { 	parser = ((org.joda.time.format.DateTimeParser) (f)); } ` -topatch--> `if (true) { 	parser = ((org.joda.time.format.DateTimeParser) (f)); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 111, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (isParser(f)) { 	parser = ((org.joda.time.format.DateTimeParser) (f)); } ` -topatch--> `if (false) { 	parser = ((org.joda.time.format.DateTimeParser) (f)); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 111, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (isParser(f)) { 	parser = ((org.joda.time.format.DateTimeParser) (f)); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 114, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((printer != null) || (parser != null)) { 	return new org.joda.time.format.DateTimeFormatter(prin[...] ` -topatch--> `if (true) { 	return new org.joda.time.format.DateTimeFormatter(printer, parser); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 114, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((printer != null) || (parser != null)) { 	return new org.joda.time.format.DateTimeFormatter(prin[...] ` -topatch--> `if (false) { 	return new org.joda.time.format.DateTimeFormatter(printer, parser); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 114, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((printer != null) || (parser != null)) { 	return new org.joda.time.format.DateTimeFormatter(prin[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 115, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.joda.time.format.DateTimeFormatter(printer, parser) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatter line: 119, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `iPrinter = printer ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatter line: 120, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `iParser = parser ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatter line: 121, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `iLocale = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatter line: 122, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `iOffsetParsed = false ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatter line: 123, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `iChrono = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatter line: 124, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `iZone = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatter line: 125, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `iPivotYear = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatter line: 126, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `iDefaultYear = 2000 ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 1165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (f instanceof org.joda.time.format.DateTimePrinter) { 	if (f instanceof org.joda.time.format.Date[...] ` -topatch--> `if (true) { 	if (f instanceof org.joda.time.format.DateTimeFormatterBuilder.Composite) { 		return (([...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:185) - The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:187) - Killed the Process that runs JUnit test cases 83489
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 1165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (f instanceof org.joda.time.format.DateTimePrinter) { 	if (f instanceof org.joda.time.format.Date[...] ` -topatch--> `if (false) { 	if (f instanceof org.joda.time.format.DateTimeFormatterBuilder.Composite) { 		return ([...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:185) - The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
[INFO ] fr.inria.astor.core.validation.processbased.LaucherJUnitProcess.killProcess(LaucherJUnitProcess.java:187) - Killed the Process that runs JUnit test cases 83507
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 1165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (f instanceof org.joda.time.format.DateTimePrinter) { 	if (f instanceof org.joda.time.format.Date[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 1166, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (f instanceof org.joda.time.format.DateTimeFormatterBuilder.Composite) { 	return ((org.joda.time.[...] ` -topatch--> `if (true) { 	return ((org.joda.time.format.DateTimeFormatterBuilder.Composite) (f)).isPrinter(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 1166, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (f instanceof org.joda.time.format.DateTimeFormatterBuilder.Composite) { 	return ((org.joda.time.[...] ` -topatch--> `if (false) { 	return ((org.joda.time.format.DateTimeFormatterBuilder.Composite) (f)).isPrinter(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 1166, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (f instanceof org.joda.time.format.DateTimeFormatterBuilder.Composite) { 	return ((org.joda.time.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 1175, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (f instanceof org.joda.time.format.DateTimeParser) { 	if (f instanceof org.joda.time.format.DateT[...] ` -topatch--> `if (true) { 	if (f instanceof org.joda.time.format.DateTimeFormatterBuilder.Composite) { 		return (([...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 1175, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (f instanceof org.joda.time.format.DateTimeParser) { 	if (f instanceof org.joda.time.format.DateT[...] ` -topatch--> `if (false) { 	if (f instanceof org.joda.time.format.DateTimeFormatterBuilder.Composite) { 		return ([...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 1175, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (f instanceof org.joda.time.format.DateTimeParser) { 	if (f instanceof org.joda.time.format.DateT[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 1176, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (f instanceof org.joda.time.format.DateTimeFormatterBuilder.Composite) { 	return ((org.joda.time.[...] ` -topatch--> `if (true) { 	return ((org.joda.time.format.DateTimeFormatterBuilder.Composite) (f)).isParser(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 1176, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (f instanceof org.joda.time.format.DateTimeFormatterBuilder.Composite) { 	return ((org.joda.time.[...] ` -topatch--> `if (false) { 	return ((org.joda.time.format.DateTimeFormatterBuilder.Composite) (f)).isParser(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 1176, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (f instanceof org.joda.time.format.DateTimeFormatterBuilder.Composite) { 	return ((org.joda.time.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 374, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `iFormatter = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 376, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `iElementPairs.add(element) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 377, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `iElementPairs.add(element) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 1140, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (f == null) { 	if ((iElementPairs.size()) == 2) { 		java.lang.Object printer = iElementPairs.get([...] ` -topatch--> `if (true) { 	if ((this.iElementPairs.size()) == 2) { 		java.lang.Object printer = this.iElementPairs[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 1140, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (f == null) { 	if ((iElementPairs.size()) == 2) { 		java.lang.Object printer = iElementPairs.get([...] ` -topatch--> `if (false) { 	if ((this.iElementPairs.size()) == 2) { 		java.lang.Object printer = this.iElementPair[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 1140, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (f == null) { 	if ((iElementPairs.size()) == 2) { 		java.lang.Object printer = iElementPairs.get([...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 1141, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((iElementPairs.size()) == 2) { 	java.lang.Object printer = iElementPairs.get(0); 	java.lang.Obje[...] ` -topatch--> `if (true) { 	java.lang.Object printer = this.iElementPairs.get(0); 	java.lang.Object parser = this.i[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 1141, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((iElementPairs.size()) == 2) { 	java.lang.Object printer = iElementPairs.get(0); 	java.lang.Obje[...] ` -topatch--> `if (false) { 	java.lang.Object printer = this.iElementPairs.get(0); 	java.lang.Object parser = this.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 1141, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((iElementPairs.size()) == 2) { 	java.lang.Object printer = iElementPairs.get(0); 	java.lang.Obje[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 1154, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (f == null) { 	f = new org.joda.time.format.DateTimeFormatterBuilder.Composite(iElementPairs); } ` -topatch--> `if (true) { 	f = new org.joda.time.format.DateTimeFormatterBuilder.Composite(this.iElementPairs); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 1154, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (f == null) { 	f = new org.joda.time.format.DateTimeFormatterBuilder.Composite(iElementPairs); } ` -topatch--> `if (false) { 	f = new org.joda.time.format.DateTimeFormatterBuilder.Composite(this.iElementPairs); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 1154, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (f == null) { 	f = new org.joda.time.format.DateTimeFormatterBuilder.Composite(iElementPairs); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 1158, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `iFormatter = f ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.format.DateTimeFormatterBuilder line: 85, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `iElementPairs = new java.util.ArrayList<java.lang.Object>() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DurationFieldType line: 95, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `iName = name ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeUtils line: 284, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (chrono == null) { 	return org.joda.time.chrono.ISOChronology.getInstance(); } ` -topatch--> `if (true) { 	return org.joda.time.chrono.ISOChronology.getInstance(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeUtils line: 284, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (chrono == null) { 	return org.joda.time.chrono.ISOChronology.getInstance(); } ` -topatch--> `if (false) { 	return org.joda.time.chrono.ISOChronology.getInstance(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeUtils line: 284, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (chrono == null) { 	return org.joda.time.chrono.ISOChronology.getInstance(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.Duration line: 164, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (millis == 0) { 	return org.joda.time.Duration.ZERO; } ` -topatch--> `if (true) { 	return org.joda.time.Duration.ZERO; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.Duration line: 164, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (millis == 0) { 	return org.joda.time.Duration.ZERO; } ` -topatch--> `if (false) { 	return org.joda.time.Duration.ZERO; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.Duration line: 164, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (millis == 0) { 	return org.joda.time.Duration.ZERO; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeFieldType line: 154, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `iName = name ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 135, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (zone == null) { 	synchronized(org.joda.time.DateTimeZone.class) { 		zone = org.joda.time.DateTim[...] ` -topatch--> `if (true) { 	synchronized(org.joda.time.DateTimeZone.class) { 		zone = org.joda.time.DateTimeZone.cD[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 135, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (zone == null) { 	synchronized(org.joda.time.DateTimeZone.class) { 		zone = org.joda.time.DateTim[...] ` -topatch--> `if (false) { 	synchronized(org.joda.time.DateTimeZone.class) { 		zone = org.joda.time.DateTimeZone.c[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 135, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (zone == null) { 	synchronized(org.joda.time.DateTimeZone.class) { 		zone = org.joda.time.DateTim[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 136, pointed element: CtSynchronizedImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSynchronizedImpl) `synchronized(org.joda.time.DateTimeZone.class) { 	zone = org.joda.time.DateTimeZone.cDefault; 	if (z[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 137, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `zone = org.joda.time.DateTimeZone.cDefault ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 138, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (zone == null) { 	org.joda.time.DateTimeZone temp = null; 	try { 		try { 			java.lang.String id =[...] ` -topatch--> `if (true) { 	org.joda.time.DateTimeZone temp = null; 	try { 		try { 			java.lang.String id = java.la[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 138, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (zone == null) { 	org.joda.time.DateTimeZone temp = null; 	try { 		try { 			java.lang.String id =[...] ` -topatch--> `if (false) { 	org.joda.time.DateTimeZone temp = null; 	try { 		try { 			java.lang.String id = java.l[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 138, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (zone == null) { 	org.joda.time.DateTimeZone temp = null; 	try { 		try { 			java.lang.String id =[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 143, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (id != null) { 	temp = org.joda.time.DateTimeZone.forID(id); } ` -topatch--> `if (true) { 	temp = org.joda.time.DateTimeZone.forID(id); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 143, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (id != null) { 	temp = org.joda.time.DateTimeZone.forID(id); } ` -topatch--> `if (false) { 	temp = org.joda.time.DateTimeZone.forID(id); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 143, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (id != null) { 	temp = org.joda.time.DateTimeZone.forID(id); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 144, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `temp = org.joda.time.DateTimeZone.forID(id) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 149, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (temp == null) { 	temp = org.joda.time.DateTimeZone.forTimeZone(java.util.TimeZone.getDefault());[...] ` -topatch--> `if (true) { 	temp = org.joda.time.DateTimeZone.forTimeZone(java.util.TimeZone.getDefault()); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 149, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (temp == null) { 	temp = org.joda.time.DateTimeZone.forTimeZone(java.util.TimeZone.getDefault());[...] ` -topatch--> `if (false) { 	temp = org.joda.time.DateTimeZone.forTimeZone(java.util.TimeZone.getDefault()); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 149, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (temp == null) { 	temp = org.joda.time.DateTimeZone.forTimeZone(java.util.TimeZone.getDefault());[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 150, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `temp = org.joda.time.DateTimeZone.forTimeZone(java.util.TimeZone.getDefault()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 155, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (temp == null) { 	temp = org.joda.time.DateTimeZone.UTC; } ` -topatch--> `if (true) { 	temp = org.joda.time.DateTimeZone.UTC; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 155, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (temp == null) { 	temp = org.joda.time.DateTimeZone.UTC; } ` -topatch--> `if (false) { 	temp = org.joda.time.DateTimeZone.UTC; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 155, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (temp == null) { 	temp = org.joda.time.DateTimeZone.UTC; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 158, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `org.joda.time.DateTimeZone.cDefault = zone = temp ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 224, pointed element: CtThrowImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalArgumentException((("The datetime zone id '" + id) + "' is not recognised[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 330, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (zone == null) { 	return org.joda.time.DateTimeZone.getDefault(); } ` -topatch--> `if (true) { 	return org.joda.time.DateTimeZone.getDefault(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 330, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (zone == null) { 	return org.joda.time.DateTimeZone.getDefault(); } ` -topatch--> `if (false) { 	return org.joda.time.DateTimeZone.getDefault(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 330, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (zone == null) { 	return org.joda.time.DateTimeZone.getDefault(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 334, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (id.equals("UTC")) { 	return org.joda.time.DateTimeZone.UTC; } ` -topatch--> `if (true) { 	return org.joda.time.DateTimeZone.UTC; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 334, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (id.equals("UTC")) { 	return org.joda.time.DateTimeZone.UTC; } ` -topatch--> `if (false) { 	return org.joda.time.DateTimeZone.UTC; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 334, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (id.equals("UTC")) { 	return org.joda.time.DateTimeZone.UTC; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 341, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (convId != null) { 	dtz = org.joda.time.DateTimeZone.cProvider.getZone(convId); } ` -topatch--> `if (true) { 	dtz = org.joda.time.DateTimeZone.cProvider.getZone(convId); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 341, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (convId != null) { 	dtz = org.joda.time.DateTimeZone.cProvider.getZone(convId); } ` -topatch--> `if (false) { 	dtz = org.joda.time.DateTimeZone.cProvider.getZone(convId); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 341, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (convId != null) { 	dtz = org.joda.time.DateTimeZone.cProvider.getZone(convId); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 344, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (dtz == null) { 	dtz = org.joda.time.DateTimeZone.cProvider.getZone(id); } ` -topatch--> `if (true) { 	dtz = org.joda.time.DateTimeZone.cProvider.getZone(id); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 344, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (dtz == null) { 	dtz = org.joda.time.DateTimeZone.cProvider.getZone(id); } ` -topatch--> `if (false) { 	dtz = org.joda.time.DateTimeZone.cProvider.getZone(id); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 344, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (dtz == null) { 	dtz = org.joda.time.DateTimeZone.cProvider.getZone(id); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 345, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `dtz = org.joda.time.DateTimeZone.cProvider.getZone(id) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 347, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (dtz != null) { 	return dtz; } ` -topatch--> `if (true) { 	return dtz; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 347, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (dtz != null) { 	return dtz; } ` -topatch--> `if (false) { 	return dtz; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 347, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (dtz != null) { 	return dtz; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 348, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return dtz ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 584, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map == null) {  	map = new java.util.HashMap<java.lang.String, java.lang.String>(); 	map.put("GM[...] ` -topatch--> `if (true) {  	map = new java.util.HashMap<java.lang.String, java.lang.String>(); 	map.put("GMT", "UT[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 584, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map == null) {  	map = new java.util.HashMap<java.lang.String, java.lang.String>(); 	map.put("GM[...] ` -topatch--> `if (false) {  	map = new java.util.HashMap<java.lang.String, java.lang.String>(); 	map.put("GMT", "U[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 584, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (map == null) {  	map = new java.util.HashMap<java.lang.String, java.lang.String>(); 	map.put("GM[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 586, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `map = new java.util.HashMap<java.lang.String, java.lang.String>() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 587, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `map.put("GMT", "UTC") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 588, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `map.put("WET", "WET") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 589, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `map.put("CET", "CET") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 590, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `map.put("MET", "CET") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 591, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `map.put("ECT", "CET") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 592, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `map.put("EET", "EET") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 593, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `map.put("MIT", "Pacific/Apia") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 594, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `map.put("HST", "Pacific/Honolulu") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 595, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `map.put("AST", "America/Anchorage") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 596, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `map.put("PST", "America/Los_Angeles") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 597, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `map.put("MST", "America/Denver") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 598, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `map.put("PNT", "America/Phoenix") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 599, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `map.put("CST", "America/Chicago") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 600, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `map.put("EST", "America/New_York") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 601, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `map.put("IET", "America/Indiana/Indianapolis") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 602, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `map.put("PRT", "America/Puerto_Rico") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 603, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `map.put("CNT", "America/St_Johns") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 604, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `map.put("AGT", "America/Argentina/Buenos_Aires") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 605, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `map.put("BET", "America/Sao_Paulo") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 606, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `map.put("ART", "Africa/Cairo") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 607, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `map.put("CAT", "Africa/Harare") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 608, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `map.put("EAT", "Africa/Addis_Ababa") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 609, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `map.put("NET", "Asia/Yerevan") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 610, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `map.put("PLT", "Asia/Karachi") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 611, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `map.put("IST", "Asia/Kolkata") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 612, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `map.put("BST", "Asia/Dhaka") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:63) - mod_point MP=org.joda.time.DateTimeZone line: 613, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:64) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `map.put("VST", "Asia/Ho_Chi_Minh") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.belowMaxTime(AstorCoreEngine.java:275) - 
 No more time for operating
Jun 27, 2019 7:53:46 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
Jun 27, 2019 7:53:47 AM java.util.jar.Attributes read
WARNING: Duplicate name in Manifest: SHA-256-Digest.
Ensure that the manifest does not have duplicate entries, and
that blank lines separate individual sections in both your
manifest and in the META-INF/MANIFEST.MF entry in the jar file.
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:173) - Time Repair Loop (s): 7218.366
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:175) - generationsexecuted: 1
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:244) - 
----SUMMARY_EXECUTION---
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:191) - number of variants that pass the compile is 326

[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:192) - number of variants that fail the compile is 56

[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:194) - 
 --SOLUTIONS DESCRIPTION--


Astor Output:

General stats:
EXECUTION_IDENTIFIER=Time-3
TOTAL_TIME=7218.366
NR_GENERATIONS=null
NR_RIGHT_COMPILATIONS=326
NR_FAILLING_COMPILATIONS=56
NR_ERRONEOUS_VARIANCES=null
NR_FAILING_VALIDATION_PROCESS=null
OUTPUT_STATUS=TIME_OUT

Patch stats:

[INFO ] fr.inria.main.evolution.AstorMain.run(AstorMain.java:271) - Time Total(s): 7285.235
3096.73user 53.31system 2:01:28elapsed 43%CPU (0avgtext+0avgdata 761372maxresident)k
6689688inputs+883944outputs (256261major+2082841minor)pagefaults 0swaps


Node: ubuntu



Date: Thu Jun 27 07:53:49 EDT 2019

