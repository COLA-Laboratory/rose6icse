package edu.purdue.cs.model;

import edu.purdue.cs.inner.InnerProperty;
import lombok.Data;

import java.io.Serializable;
import java.util.*;

@Data
public abstract class Subject implements Serializable {
    private static final long serialVersionUID = 234567L;

    /**
     * To uniquely identify the subject, generated by concatenating a few fields. Examples are as follows:
     * class: java.util.ArrayList
     * method: java.util.ArrayList.add(int index, E element)
     * field: java.util.ArrayList.elementData
     * parameter: java.util.ArrayList.add(int index, E element).index
     * variable: java.util.ArrayList.remove(int index).oldValue@lineNum (in case multiple variables with the same name)
     * statement: java.util.ArrayList.xx//TODO
     */
    private String id;
    private int lineNumBegin;
    private int lineNumEnd;
    private String pack;
    private boolean hasComment;
    private ArrayList<Comment> comments = new ArrayList<Comment>();
    private List<String> nounDescribes;
    private boolean nullable;
    private Set<InnerProperty> innerProperties = new HashSet<>();


    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public int getLineNumBegin() {
        return lineNumBegin;
    }

    public void setLineNumBegin(int lineNumBegin) {
        this.lineNumBegin = lineNumBegin;
    }

    public int getLineNumEnd() {
        return lineNumEnd;
    }

    public void setLineNumEnd(int lineNumEnd) {
        this.lineNumEnd = lineNumEnd;
    }

    public String getPack() {
        return pack;
    }

    public void setPack(String pack) {
        this.pack = pack;
    }

    public ArrayList<Comment> getComments() {
        return comments;
    }

    public void setComments(ArrayList<Comment> comments) {
        this.comments = comments;
    }

    @Override
    public String toString() {
        return id;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        Subject subject = (Subject) o;
        return Objects.equals(id, subject.id);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id);
    }

    public interface subject {
        String cls = "class";
        String field = "field";
        String method = "method";
        String param = "paramater";
        String statement = "statement";
        String var = "variable";
    }
}
