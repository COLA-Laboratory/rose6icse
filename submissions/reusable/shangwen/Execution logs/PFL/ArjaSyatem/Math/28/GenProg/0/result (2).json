{
  "repair_end": "2019-08-03 19:03:56.164347", 
  "repair_begin": "2019-08-03 17:41:44.737027", 
  "patches": [
    {
      "edits": [
        {
          "path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java", 
          "line": 140, 
          "faulty": "for (Integer row : minRatioPositions) {\n  int i=tableau.getNumObjectiveFunctions();\n  for (; i < tableau.getWidth() - 1 && minRow != row; i++) {\n    if (row == tableau.getBasicRow(i)) {\n      if (i < minIndex) {\n        minIndex=i;\n        minRow=row;\n      }\n    }\n  }\n}", 
          "type": "Replace", 
          "seed": "Integer minPos=null;"
        }, 
        {
          "path": "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java", 
          "line": 151, 
          "faulty": "return minRow;", 
          "type": "Delete", 
          "seed": "List<LinearConstraint> normalized=new ArrayList<LinearConstraint>();"
        }
      ], 
      "patch": "--- /tmp/GenProg_Defects4J_Math_28/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java\t2019-08-03 20:40:40.765737975 -0400\n+++ /tmp/GenProg_Defects4J_Math_28/patches_0ef5/Patch_2/patched/org/apache/commons/math3/optimization/linear/SimplexSolver.java\t2019-08-03 22:03:55.724302163 -0400\n@@ -137,18 +137,7 @@\n             // This heuristic is based on empirical data gathered while investigating MATH-828.\n                 Integer minRow = null;\n                 int minIndex = tableau.getWidth();\n-                for (Integer row : minRatioPositions) {\n-                    int i = tableau.getNumObjectiveFunctions();\n-                    for (; i < tableau.getWidth() - 1 && minRow != row; i++) {\n-                        if (row == tableau.getBasicRow(i)) {\n-                            if (i < minIndex) {\n-                                minIndex = i;\n-                                minRow = row;\n-                            }\n-                        }\n-                    }\n-                }\n-                return minRow;\n+                Integer minPos = null;\n         }\n         return minRatioPositions.get(0);\n     }\n\n\n"
    }
  ]
}