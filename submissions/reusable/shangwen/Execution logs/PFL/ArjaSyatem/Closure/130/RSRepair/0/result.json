{
  "repair_end": "2019-08-14 01:33:31.701712", 
  "repair_begin": "2019-08-14 01:12:50.598316", 
  "patches": [
    {
      "edits": [
        {
          "path": "src/com/google/javascript/jscomp/CollapseProperties.java", 
          "line": 172, 
          "faulty": "if (name.globalSets == 1 && name.localSets == 0 && name.aliasingGets > 0) {\n  List<Ref> refs=Lists.newArrayList(name.getRefs());\n  for (  Ref ref : refs) {\n    if (ref.type == Type.ALIASING_GET && ref.scope.isLocal()) {\n      if (inlineAliasIfPossible(ref,namespace)) {\n        name.removeRef(ref);\n      }\n    }\n  }\n}", 
          "type": "Delete", 
          "seed": "int index=-1;"
        }
      ], 
      "patch": "--- /tmp/RSRepair_Defects4J_Closure_130/src/com/google/javascript/jscomp/CollapseProperties.java\t2019-08-14 04:11:19.541376628 -0400\n+++ /tmp/RSRepair_Defects4J_Closure_130/patches_3c48/Patch_1/patched/com/google/javascript/jscomp/CollapseProperties.java\t2019-08-14 04:33:31.684602309 -0400\n@@ -169,21 +169,6 @@\n         continue;\n       }\n \n-      if (name.globalSets == 1 && name.localSets == 0 &&\n-          name.aliasingGets > 0) {\n-        // {@code name} meets condition (b). Find all of its local aliases\n-        // and try to inline them.\n-        List<Ref> refs = Lists.newArrayList(name.getRefs());\n-        for (Ref ref : refs) {\n-          if (ref.type == Type.ALIASING_GET && ref.scope.isLocal()) {\n-            // {@code name} meets condition (c). Try to inline it.\n-            if (inlineAliasIfPossible(ref, namespace)) {\n-              name.removeRef(ref);\n-            }\n-          }\n-        }\n-      }\n-\n       // Check if {@code name} has any aliases left after the\n       // local-alias-inlining above.\n       if ((name.type == Name.Type.OBJECTLIT ||\n\n\n"
    }
  ]
}