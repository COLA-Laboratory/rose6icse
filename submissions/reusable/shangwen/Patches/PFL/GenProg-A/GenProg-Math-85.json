{
  "repair_end": "2019-07-09 13:01:53.332912", 
  "repair_begin": "2019-07-09 12:57:09.271390", 
  "patches": [
    {
      "diff": "--- /tmp/GenProg_Defects4J_Math_85/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2019-07-09 00:56:28.347533953 -0400\n+++ /tmp/GenProg_Defects4J_Math_85/patches_perx/Patch_1/patched/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java\t2019-07-09 01:01:52.964215293 -0400\n@@ -195,14 +195,11 @@\n         } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && \n                 ((a > lowerBound) || (b < upperBound)));\n    \n-        if (fa * fb >= 0.0 ) {\n-            throw new ConvergenceException(\n-                      \"number of iterations={0}, maximum iterations={1}, \" +\n-                      \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n-                      \"final b value={6}, f(a)={7}, f(b)={8}\",\n-                      numIterations, maximumIterations, initial,\n-                      lowerBound, upperBound, a, b, fa, fb);\n-        }\n+        if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {\n+\t\t\tthrow MathRuntimeException.createIllegalArgumentException(\n+\t\t\t\t\t\"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\", lowerBound,\n+\t\t\t\t\tinitial, upperBound);\n+\t\t}\n         \n         return new double[]{a, b};\n     }\n\n\n", 
      "edits": [
        {
          "path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java", 
          "line": 198, 
          "faulty": "if (fa * fb >= 0.0) {\n  throw new ConvergenceException(\"number of iterations={0}, maximum iterations={1}, \" + \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" + \"final b value={6}, f(a)={7}, f(b)={8}\",numIterations,maximumIterations,initial,lowerBound,upperBound,a,b,fa,fb);\n}", 
          "type": "Replace", 
          "seed": "if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {\n  throw MathRuntimeException.createIllegalArgumentException(\"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\",lowerBound,initial,upperBound);\n}"
        }
      ]
    }
  ]
}